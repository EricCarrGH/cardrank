package cardrank_test

import (
	"encoding/json"
	"fmt"
	"log"
	"math/rand"
	"strconv"
	"strings"

	"github.com/cardrank/cardrank"
)

func ExampleFromRune() {
	c := cardrank.FromRune('üÇ°')
	fmt.Printf("%b\n", c)
	// Output:
	// A‚ô†
}

func ExampleFromString() {
	c := cardrank.FromString("Ah")
	fmt.Printf("%N of %L (%b)\n", c, c, c)
	// Output:
	// Ace of Hearts (A‚ô•)
}

func ExampleMust() {
	hand := cardrank.Must("Ah K‚ô† üÉç J‚ô§ 10h")
	fmt.Printf("%b", hand)
	// Output:
	// [A‚ô• K‚ô† Q‚ô¶ J‚ô† T‚ô•]
}

func ExampleCard_unmarshal() {
	var hand []cardrank.Card
	if err := json.Unmarshal([]byte(`["3s", "4c", "5c", "Ah", "2d"]`), &hand); err != nil {
		log.Fatal(err)
	}
	fmt.Printf("%s\n", hand)
	// Output:
	// [3s 4c 5c Ah 2d]
}

func ExampleDeck_Draw() {
	d := cardrank.NewDeck()
	// note: use a real random source
	rnd := rand.New(rand.NewSource(52))
	d.Shuffle(rnd)
	hand := d.Draw(7)
	fmt.Printf("%b\n", hand)
	// Output:
	// [9‚ô£ 6‚ô• Q‚ô† 3‚ô† J‚ô† 9‚ô• K‚ô£]
}

func ExampleNewHand() {
	d := cardrank.NewDeck()
	// note: use a real random source
	rnd := rand.New(rand.NewSource(6265))
	d.Shuffle(rnd)
	hand := d.Draw(5)
	h := cardrank.NewHand(cardrank.Holdem, hand, nil)
	fmt.Printf("%b\n", h)
	// Output:
	// Four of a Kind, Eights, kicker Seven [8‚ô£ 8‚ô¶ 8‚ô• 8‚ô† 7‚ô†]
}

func ExampleHoldem_RankHand() {
	d := cardrank.NewDeck()
	// note: use a real random source
	rnd := rand.New(rand.NewSource(26076))
	d.Shuffle(rnd)
	h := cardrank.Holdem.RankHand(d.Draw(5), d.Draw(2))
	fmt.Printf("%b\n", h)
	// Output:
	// Straight Flush, Five-high, Steel Wheel [5‚ô£ 4‚ô£ 3‚ô£ 2‚ô£ A‚ô£]
}

func Example_holdem() {
	for i, game := range []struct {
		seed    int64
		players int
	}{
		{3, 2},
		{278062, 2},
		{1928, 6},
		{6151, 6},
		{5680, 6},
		{23965, 2},
		{13959, 2},
		{23366, 6},
		{29555, 3},
		{472600, 3},
		{107, 10},
	} {
		// note: use a real random source
		rnd := rand.New(rand.NewSource(game.seed))
		pockets, board := cardrank.Holdem.Deal(rnd, game.players)
		hands := cardrank.Holdem.RankHands(pockets, board)
		fmt.Printf("------ Holdem %d ------\n", i+1)
		fmt.Printf("Board:    %b\n", board)
		for j := 0; j < game.players; j++ {
			fmt.Printf("Player %d: %b %s %b %b\n", j+1, hands[j].Pocket, hands[j].Description(), hands[j].HiBest, hands[j].HiUnused)
		}
		h, pivot := cardrank.HiOrder(hands)
		if pivot == 1 {
			fmt.Printf("Result:   Player %d wins with %s %b\n", h[0]+1, hands[h[0]].Description(), hands[h[0]].HiBest)
		} else {
			var s, b []string
			for j := 0; j < pivot; j++ {
				s = append(s, strconv.Itoa(h[j]+1))
				b = append(b, fmt.Sprintf("%b", hands[h[j]].HiBest))
			}
			fmt.Printf("Result:   Players %s push with %s %s\n", strings.Join(s, ", "), hands[h[0]].Description(), strings.Join(b, ", "))
		}
	}
	// Output:
	// ------ Holdem 1 ------
	// Board:    [J‚ô† T‚ô† 2‚ô¶ 2‚ô† Q‚ô•]
	// Player 1: [6‚ô¶ 7‚ô†] Pair, Twos, kickers Queen, Jack, Ten [2‚ô¶ 2‚ô† Q‚ô• J‚ô† T‚ô†] [7‚ô† 6‚ô¶]
	// Player 2: [8‚ô† 4‚ô£] Pair, Twos, kickers Queen, Jack, Ten [2‚ô¶ 2‚ô† Q‚ô• J‚ô† T‚ô†] [8‚ô† 4‚ô£]
	// Result:   Players 1, 2 push with Pair, Twos, kickers Queen, Jack, Ten [2‚ô¶ 2‚ô† Q‚ô• J‚ô† T‚ô†], [2‚ô¶ 2‚ô† Q‚ô• J‚ô† T‚ô†]
	// ------ Holdem 2 ------
	// Board:    [8‚ô† 9‚ô† J‚ô† 9‚ô£ T‚ô†]
	// Player 1: [7‚ô† 6‚ô¶] Straight Flush, Jack-high [J‚ô† T‚ô† 9‚ô† 8‚ô† 7‚ô†] [9‚ô£ 6‚ô¶]
	// Player 2: [T‚ô£ Q‚ô†] Straight Flush, Queen-high [Q‚ô† J‚ô† T‚ô† 9‚ô† 8‚ô†] [T‚ô£ 9‚ô£]
	// Result:   Player 2 wins with Straight Flush, Queen-high [Q‚ô† J‚ô† T‚ô† 9‚ô† 8‚ô†]
	// ------ Holdem 3 ------
	// Board:    [A‚ô† T‚ô£ K‚ô† J‚ô£ 6‚ô•]
	// Player 1: [T‚ô• 5‚ô¶] Pair, Tens, kickers Ace, King, Jack [T‚ô£ T‚ô• A‚ô† K‚ô† J‚ô£] [6‚ô• 5‚ô¶]
	// Player 2: [2‚ô† K‚ô¶] Pair, Kings, kickers Ace, Jack, Ten [K‚ô¶ K‚ô† A‚ô† J‚ô£ T‚ô£] [6‚ô• 2‚ô†]
	// Player 3: [Q‚ô£ Q‚ô•] Straight, Ace-high [A‚ô† K‚ô† Q‚ô£ J‚ô£ T‚ô£] [Q‚ô• 6‚ô•]
	// Player 4: [J‚ô† 7‚ô£] Pair, Jacks, kickers Ace, King, Ten [J‚ô£ J‚ô† A‚ô† K‚ô† T‚ô£] [7‚ô£ 6‚ô•]
	// Player 5: [4‚ô• 6‚ô†] Pair, Sixes, kickers Ace, King, Jack [6‚ô• 6‚ô† A‚ô† K‚ô† J‚ô£] [T‚ô£ 4‚ô•]
	// Player 6: [Q‚ô† 3‚ô£] Straight, Ace-high [A‚ô† K‚ô† Q‚ô† J‚ô£ T‚ô£] [6‚ô• 3‚ô£]
	// Result:   Players 3, 6 push with Straight, Ace-high [A‚ô† K‚ô† Q‚ô£ J‚ô£ T‚ô£], [A‚ô† K‚ô† Q‚ô† J‚ô£ T‚ô£]
	// ------ Holdem 4 ------
	// Board:    [9‚ô¶ J‚ô£ A‚ô• 9‚ô• J‚ô†]
	// Player 1: [K‚ô† 8‚ô¶] Two Pair, Jacks over Nines, kicker Ace [J‚ô£ J‚ô† 9‚ô¶ 9‚ô• A‚ô•] [K‚ô† 8‚ô¶]
	// Player 2: [7‚ô¶ 9‚ô†] Full House, Nines full of Jacks [9‚ô¶ 9‚ô• 9‚ô† J‚ô£ J‚ô†] [A‚ô• 7‚ô¶]
	// Player 3: [A‚ô¶ 8‚ô•] Two Pair, Aces over Jacks, kicker Nine [A‚ô¶ A‚ô• J‚ô£ J‚ô† 9‚ô¶] [9‚ô• 8‚ô•]
	// Player 4: [4‚ô• 6‚ô£] Two Pair, Jacks over Nines, kicker Ace [J‚ô£ J‚ô† 9‚ô¶ 9‚ô• A‚ô•] [6‚ô£ 4‚ô•]
	// Player 5: [3‚ô• 5‚ô•] Two Pair, Jacks over Nines, kicker Ace [J‚ô£ J‚ô† 9‚ô¶ 9‚ô• A‚ô•] [5‚ô• 3‚ô•]
	// Player 6: [T‚ô£ J‚ô¶] Full House, Jacks full of Nines [J‚ô£ J‚ô¶ J‚ô† 9‚ô¶ 9‚ô•] [A‚ô• T‚ô£]
	// Result:   Player 6 wins with Full House, Jacks full of Nines [J‚ô£ J‚ô¶ J‚ô† 9‚ô¶ 9‚ô•]
	// ------ Holdem 5 ------
	// Board:    [3‚ô† 9‚ô• A‚ô¶ 6‚ô• Q‚ô¶]
	// Player 1: [T‚ô¶ 4‚ô•] Nothing, Ace-high, kickers Queen, Ten, Nine, Six [A‚ô¶ Q‚ô¶ T‚ô¶ 9‚ô• 6‚ô•] [4‚ô• 3‚ô†]
	// Player 2: [8‚ô¶ 7‚ô¶] Nothing, Ace-high, kickers Queen, Nine, Eight, Seven [A‚ô¶ Q‚ô¶ 9‚ô• 8‚ô¶ 7‚ô¶] [6‚ô• 3‚ô†]
	// Player 3: [K‚ô† K‚ô•] Pair, Kings, kickers Ace, Queen, Nine [K‚ô• K‚ô† A‚ô¶ Q‚ô¶ 9‚ô•] [6‚ô• 3‚ô†]
	// Player 4: [T‚ô£ 5‚ô¶] Nothing, Ace-high, kickers Queen, Ten, Nine, Six [A‚ô¶ Q‚ô¶ T‚ô£ 9‚ô• 6‚ô•] [5‚ô¶ 3‚ô†]
	// Player 5: [7‚ô• T‚ô•] Nothing, Ace-high, kickers Queen, Ten, Nine, Seven [A‚ô¶ Q‚ô¶ T‚ô• 9‚ô• 7‚ô•] [6‚ô• 3‚ô†]
	// Player 6: [8‚ô£ 5‚ô£] Nothing, Ace-high, kickers Queen, Nine, Eight, Six [A‚ô¶ Q‚ô¶ 9‚ô• 8‚ô£ 6‚ô•] [5‚ô£ 3‚ô†]
	// Result:   Player 3 wins with Pair, Kings, kickers Ace, Queen, Nine [K‚ô• K‚ô† A‚ô¶ Q‚ô¶ 9‚ô•]
	// ------ Holdem 6 ------
	// Board:    [T‚ô• 6‚ô• 7‚ô• 2‚ô• 7‚ô£]
	// Player 1: [6‚ô£ K‚ô•] Flush, King-high [K‚ô• T‚ô• 7‚ô• 6‚ô• 2‚ô•] [7‚ô£ 6‚ô£]
	// Player 2: [6‚ô† 5‚ô•] Flush, Ten-high [T‚ô• 7‚ô• 6‚ô• 5‚ô• 2‚ô•] [7‚ô£ 6‚ô†]
	// Result:   Player 1 wins with Flush, King-high [K‚ô• T‚ô• 7‚ô• 6‚ô• 2‚ô•]
	// ------ Holdem 7 ------
	// Board:    [4‚ô¶ A‚ô• A‚ô£ 4‚ô† A‚ô¶]
	// Player 1: [T‚ô• 9‚ô£] Full House, Aces full of Fours [A‚ô£ A‚ô¶ A‚ô• 4‚ô¶ 4‚ô†] [T‚ô• 9‚ô£]
	// Player 2: [T‚ô† A‚ô†] Four of a Kind, Aces, kicker Four [A‚ô£ A‚ô¶ A‚ô• A‚ô† 4‚ô¶] [4‚ô† T‚ô†]
	// Result:   Player 2 wins with Four of a Kind, Aces, kicker Four [A‚ô£ A‚ô¶ A‚ô• A‚ô† 4‚ô¶]
	// ------ Holdem 8 ------
	// Board:    [Q‚ô• T‚ô• T‚ô† J‚ô• K‚ô•]
	// Player 1: [A‚ô• 8‚ô•] Straight Flush, Ace-high, Royal [A‚ô• K‚ô• Q‚ô• J‚ô• T‚ô•] [T‚ô† 8‚ô•]
	// Player 2: [9‚ô† 8‚ô¶] Straight, King-high [K‚ô• Q‚ô• J‚ô• T‚ô• 9‚ô†] [T‚ô† 8‚ô¶]
	// Player 3: [Q‚ô£ 4‚ô¶] Two Pair, Queens over Tens, kicker King [Q‚ô£ Q‚ô• T‚ô• T‚ô† K‚ô•] [J‚ô• 4‚ô¶]
	// Player 4: [2‚ô† Q‚ô¶] Two Pair, Queens over Tens, kicker King [Q‚ô¶ Q‚ô• T‚ô• T‚ô† K‚ô•] [J‚ô• 2‚ô†]
	// Player 5: [6‚ô• A‚ô¶] Flush, King-high [K‚ô• Q‚ô• J‚ô• T‚ô• 6‚ô•] [A‚ô¶ T‚ô†]
	// Player 6: [3‚ô¶ T‚ô£] Three of a Kind, Tens, kickers King, Queen [T‚ô£ T‚ô• T‚ô† K‚ô• Q‚ô•] [J‚ô• 3‚ô¶]
	// Result:   Player 1 wins with Straight Flush, Ace-high, Royal [A‚ô• K‚ô• Q‚ô• J‚ô• T‚ô•]
	// ------ Holdem 9 ------
	// Board:    [A‚ô£ 2‚ô£ 4‚ô£ 5‚ô£ 9‚ô•]
	// Player 1: [T‚ô£ 6‚ô†] Flush, Ace-high [A‚ô£ T‚ô£ 5‚ô£ 4‚ô£ 2‚ô£] [9‚ô• 6‚ô†]
	// Player 2: [J‚ô¶ 3‚ô£] Straight Flush, Five-high, Steel Wheel [5‚ô£ 4‚ô£ 3‚ô£ 2‚ô£ A‚ô£] [J‚ô¶ 9‚ô•]
	// Player 3: [4‚ô• T‚ô†] Pair, Fours, kickers Ace, Ten, Nine [4‚ô£ 4‚ô• A‚ô£ T‚ô† 9‚ô•] [5‚ô£ 2‚ô£]
	// Result:   Player 2 wins with Straight Flush, Five-high, Steel Wheel [5‚ô£ 4‚ô£ 3‚ô£ 2‚ô£ A‚ô£]
	// ------ Holdem 10 ------
	// Board:    [8‚ô£ J‚ô£ 8‚ô• 7‚ô• 9‚ô•]
	// Player 1: [8‚ô¶ T‚ô•] Straight, Jack-high [J‚ô£ T‚ô• 9‚ô• 8‚ô£ 7‚ô•] [8‚ô¶ 8‚ô•]
	// Player 2: [8‚ô† 3‚ô£] Three of a Kind, Eights, kickers Jack, Nine [8‚ô£ 8‚ô• 8‚ô† J‚ô£ 9‚ô•] [7‚ô• 3‚ô£]
	// Player 3: [6‚ô• K‚ô•] Flush, King-high [K‚ô• 9‚ô• 8‚ô• 7‚ô• 6‚ô•] [J‚ô£ 8‚ô£]
	// Result:   Player 3 wins with Flush, King-high [K‚ô• 9‚ô• 8‚ô• 7‚ô• 6‚ô•]
	// ------ Holdem 11 ------
	// Board:    [5‚ô• 3‚ô£ J‚ô• 6‚ô¶ 6‚ô£]
	// Player 1: [8‚ô• T‚ô•] Pair, Sixes, kickers Jack, Ten, Eight [6‚ô£ 6‚ô¶ J‚ô• T‚ô• 8‚ô•] [5‚ô• 3‚ô£]
	// Player 2: [4‚ô• Q‚ô£] Pair, Sixes, kickers Queen, Jack, Five [6‚ô£ 6‚ô¶ Q‚ô£ J‚ô• 5‚ô•] [4‚ô• 3‚ô£]
	// Player 3: [T‚ô£ Q‚ô†] Pair, Sixes, kickers Queen, Jack, Ten [6‚ô£ 6‚ô¶ Q‚ô† J‚ô• T‚ô£] [5‚ô• 3‚ô£]
	// Player 4: [3‚ô• 5‚ô¶] Two Pair, Sixes over Fives, kicker Jack [6‚ô£ 6‚ô¶ 5‚ô¶ 5‚ô• J‚ô•] [3‚ô£ 3‚ô•]
	// Player 5: [A‚ô† T‚ô†] Pair, Sixes, kickers Ace, Jack, Ten [6‚ô£ 6‚ô¶ A‚ô† J‚ô• T‚ô†] [5‚ô• 3‚ô£]
	// Player 6: [6‚ô† 2‚ô†] Three of a Kind, Sixes, kickers Jack, Five [6‚ô£ 6‚ô¶ 6‚ô† J‚ô• 5‚ô•] [3‚ô£ 2‚ô†]
	// Player 7: [J‚ô† 5‚ô£] Two Pair, Jacks over Sixes, kicker Five [J‚ô• J‚ô† 6‚ô£ 6‚ô¶ 5‚ô£] [5‚ô• 3‚ô£]
	// Player 8: [8‚ô† 9‚ô¶] Pair, Sixes, kickers Jack, Nine, Eight [6‚ô£ 6‚ô¶ J‚ô• 9‚ô¶ 8‚ô†] [5‚ô• 3‚ô£]
	// Player 9: [6‚ô• J‚ô£] Full House, Sixes full of Jacks [6‚ô£ 6‚ô¶ 6‚ô• J‚ô£ J‚ô•] [5‚ô• 3‚ô£]
	// Player 10: [2‚ô£ A‚ô£] Pair, Sixes, kickers Ace, Jack, Five [6‚ô£ 6‚ô¶ A‚ô£ J‚ô• 5‚ô•] [3‚ô£ 2‚ô£]
	// Result:   Player 9 wins with Full House, Sixes full of Jacks [6‚ô£ 6‚ô¶ 6‚ô• J‚ô£ J‚ô•]
}

func Example_short() {
	for i, game := range []struct {
		seed    int64
		players int
	}{
		{119, 2},
		{155, 4},
		{384, 8},
		{880, 4},
		{3453, 3},
		{5662, 3},
		{65481, 2},
		{27947, 4},
	} {
		// note: use a real random source
		rnd := rand.New(rand.NewSource(game.seed))
		pockets, board := cardrank.Short.Deal(rnd, game.players)
		hands := cardrank.Short.RankHands(pockets, board)
		fmt.Printf("------ Short %d ------\n", i+1)
		fmt.Printf("Board:    %b\n", board)
		for j := 0; j < game.players; j++ {
			fmt.Printf("Player %d: %b %s %b %b\n", j+1, hands[j].Pocket, hands[j].Description(), hands[j].HiBest, hands[j].HiUnused)
		}
		h, pivot := cardrank.HiOrder(hands)
		if pivot == 1 {
			fmt.Printf("Result:   Player %d wins with %s %b\n", h[0]+1, hands[h[0]].Description(), hands[h[0]].HiBest)
		} else {
			var s, b []string
			for j := 0; j < pivot; j++ {
				s = append(s, strconv.Itoa(h[j]+1))
				b = append(b, fmt.Sprintf("%b", hands[h[j]].HiBest))
			}
			fmt.Printf("Result:   Players %s push with %s %s\n", strings.Join(s, ", "), hands[h[0]].Description(), strings.Join(b, ", "))
		}
	}
	// Output:
	// ------ Short 1 ------
	// Board:    [9‚ô• A‚ô¶ A‚ô• 8‚ô£ A‚ô£]
	// Player 1: [8‚ô• A‚ô†] Four of a Kind, Aces, kicker Eight [A‚ô£ A‚ô¶ A‚ô• A‚ô† 8‚ô£] [8‚ô• 9‚ô•]
	// Player 2: [7‚ô• J‚ô¶] Three of a Kind, Aces, kickers Jack, Nine [A‚ô£ A‚ô¶ A‚ô• J‚ô¶ 9‚ô•] [8‚ô£ 7‚ô•]
	// Result:   Player 1 wins with Four of a Kind, Aces, kicker Eight [A‚ô£ A‚ô¶ A‚ô• A‚ô† 8‚ô£]
	// ------ Short 2 ------
	// Board:    [9‚ô£ 6‚ô¶ A‚ô† J‚ô† 6‚ô†]
	// Player 1: [T‚ô• A‚ô£] Two Pair, Aces over Sixes, kicker Jack [A‚ô£ A‚ô† 6‚ô¶ 6‚ô† J‚ô†] [T‚ô• 9‚ô£]
	// Player 2: [6‚ô£ 7‚ô£] Three of a Kind, Sixes, kickers Ace, Jack [6‚ô£ 6‚ô¶ 6‚ô† A‚ô† J‚ô†] [9‚ô£ 7‚ô£]
	// Player 3: [6‚ô• T‚ô†] Three of a Kind, Sixes, kickers Ace, Jack [6‚ô¶ 6‚ô• 6‚ô† A‚ô† J‚ô†] [T‚ô† 9‚ô£]
	// Player 4: [9‚ô• K‚ô†] Two Pair, Nines over Sixes, kicker Ace [9‚ô£ 9‚ô• 6‚ô¶ 6‚ô† A‚ô†] [K‚ô† J‚ô†]
	// Result:   Players 2, 3 push with Three of a Kind, Sixes, kickers Ace, Jack [6‚ô£ 6‚ô¶ 6‚ô† A‚ô† J‚ô†], [6‚ô¶ 6‚ô• 6‚ô† A‚ô† J‚ô†]
	// ------ Short 3 ------
	// Board:    [T‚ô• J‚ô£ 7‚ô• 9‚ô• K‚ô£]
	// Player 1: [8‚ô• T‚ô£] Straight, Jack-high [J‚ô£ T‚ô£ 9‚ô• 8‚ô• 7‚ô•] [K‚ô£ T‚ô•]
	// Player 2: [T‚ô† Q‚ô†] Straight, King-high [K‚ô£ Q‚ô† J‚ô£ T‚ô• 9‚ô•] [T‚ô† 7‚ô•]
	// Player 3: [J‚ô† 7‚ô£] Two Pair, Jacks over Sevens, kicker King [J‚ô£ J‚ô† 7‚ô£ 7‚ô• K‚ô£] [T‚ô• 9‚ô•]
	// Player 4: [6‚ô£ Q‚ô¶] Straight, King-high [K‚ô£ Q‚ô¶ J‚ô£ T‚ô• 9‚ô•] [7‚ô• 6‚ô£]
	// Player 5: [7‚ô¶ 6‚ô†] Pair, Sevens, kickers King, Jack, Ten [7‚ô¶ 7‚ô• K‚ô£ J‚ô£ T‚ô•] [9‚ô• 6‚ô†]
	// Player 6: [8‚ô† 8‚ô¶] Straight, Jack-high [J‚ô£ T‚ô• 9‚ô• 8‚ô¶ 7‚ô•] [K‚ô£ 8‚ô†]
	// Player 7: [9‚ô£ K‚ô•] Two Pair, Kings over Nines, kicker Jack [K‚ô£ K‚ô• 9‚ô£ 9‚ô• J‚ô£] [T‚ô• 7‚ô•]
	// Player 8: [A‚ô• K‚ô¶] Pair, Kings, kickers Ace, Jack, Ten [K‚ô£ K‚ô¶ A‚ô• J‚ô£ T‚ô•] [9‚ô• 7‚ô•]
	// Result:   Players 2, 4 push with Straight, King-high [K‚ô£ Q‚ô† J‚ô£ T‚ô• 9‚ô•], [K‚ô£ Q‚ô¶ J‚ô£ T‚ô• 9‚ô•]
	// ------ Short 4 ------
	// Board:    [T‚ô¶ 9‚ô£ 9‚ô¶ Q‚ô¶ 8‚ô¶]
	// Player 1: [J‚ô† 9‚ô•] Straight, Queen-high [Q‚ô¶ J‚ô† T‚ô¶ 9‚ô£ 8‚ô¶] [9‚ô¶ 9‚ô•]
	// Player 2: [T‚ô• 8‚ô†] Two Pair, Tens over Nines, kicker Queen [T‚ô¶ T‚ô• 9‚ô£ 9‚ô¶ Q‚ô¶] [8‚ô¶ 8‚ô†]
	// Player 3: [6‚ô£ J‚ô¶] Straight Flush, Queen-high [Q‚ô¶ J‚ô¶ T‚ô¶ 9‚ô¶ 8‚ô¶] [9‚ô£ 6‚ô£]
	// Player 4: [A‚ô£ A‚ô¶] Flush, Ace-high [A‚ô¶ Q‚ô¶ T‚ô¶ 9‚ô¶ 8‚ô¶] [A‚ô£ 9‚ô£]
	// Result:   Player 3 wins with Straight Flush, Queen-high [Q‚ô¶ J‚ô¶ T‚ô¶ 9‚ô¶ 8‚ô¶]
	// ------ Short 5 ------
	// Board:    [6‚ô† A‚ô£ 7‚ô¶ A‚ô† 6‚ô¶]
	// Player 1: [9‚ô£ T‚ô¶] Two Pair, Aces over Sixes, kicker Ten [A‚ô£ A‚ô† 6‚ô¶ 6‚ô† T‚ô¶] [9‚ô£ 7‚ô¶]
	// Player 2: [T‚ô† K‚ô†] Two Pair, Aces over Sixes, kicker King [A‚ô£ A‚ô† 6‚ô¶ 6‚ô† K‚ô†] [T‚ô† 7‚ô¶]
	// Player 3: [J‚ô• A‚ô•] Full House, Aces full of Sixes [A‚ô£ A‚ô• A‚ô† 6‚ô¶ 6‚ô†] [J‚ô• 7‚ô¶]
	// Result:   Player 3 wins with Full House, Aces full of Sixes [A‚ô£ A‚ô• A‚ô† 6‚ô¶ 6‚ô†]
	// ------ Short 6 ------
	// Board:    [A‚ô£ 6‚ô£ 9‚ô£ T‚ô¶ 8‚ô£]
	// Player 1: [6‚ô• 9‚ô†] Two Pair, Nines over Sixes, kicker Ace [9‚ô£ 9‚ô† 6‚ô£ 6‚ô• A‚ô£] [T‚ô¶ 8‚ô£]
	// Player 2: [7‚ô£ J‚ô•] Straight Flush, Nine-high, Iron Maiden [9‚ô£ 8‚ô£ 7‚ô£ 6‚ô£ A‚ô£] [J‚ô• T‚ô¶]
	// Player 3: [6‚ô† Q‚ô†] Pair, Sixes, kickers Ace, Queen, Ten [6‚ô£ 6‚ô† A‚ô£ Q‚ô† T‚ô¶] [9‚ô£ 8‚ô£]
	// Result:   Player 2 wins with Straight Flush, Nine-high, Iron Maiden [9‚ô£ 8‚ô£ 7‚ô£ 6‚ô£ A‚ô£]
	// ------ Short 7 ------
	// Board:    [K‚ô• K‚ô¶ K‚ô† K‚ô£ J‚ô£]
	// Player 1: [7‚ô¶ 8‚ô¶] Four of a Kind, Kings, kicker Jack [K‚ô£ K‚ô¶ K‚ô• K‚ô† J‚ô£] [8‚ô¶ 7‚ô¶]
	// Player 2: [T‚ô¶ 6‚ô•] Four of a Kind, Kings, kicker Jack [K‚ô£ K‚ô¶ K‚ô• K‚ô† J‚ô£] [T‚ô¶ 6‚ô•]
	// Result:   Players 1, 2 push with Four of a Kind, Kings, kicker Jack [K‚ô£ K‚ô¶ K‚ô• K‚ô† J‚ô£], [K‚ô£ K‚ô¶ K‚ô• K‚ô† J‚ô£]
	// ------ Short 8 ------
	// Board:    [8‚ô¶ 8‚ô• 8‚ô† Q‚ô† T‚ô¶]
	// Player 1: [J‚ô¶ 9‚ô£] Straight, Queen-high [Q‚ô† J‚ô¶ T‚ô¶ 9‚ô£ 8‚ô¶] [8‚ô• 8‚ô†]
	// Player 2: [T‚ô£ J‚ô£] Full House, Eights full of Tens [8‚ô¶ 8‚ô• 8‚ô† T‚ô£ T‚ô¶] [Q‚ô† J‚ô£]
	// Player 3: [K‚ô† T‚ô•] Full House, Eights full of Tens [8‚ô¶ 8‚ô• 8‚ô† T‚ô¶ T‚ô•] [K‚ô† Q‚ô†]
	// Player 4: [T‚ô† 7‚ô•] Full House, Eights full of Tens [8‚ô¶ 8‚ô• 8‚ô† T‚ô¶ T‚ô†] [Q‚ô† 7‚ô•]
	// Result:   Players 2, 3, 4 push with Full House, Eights full of Tens [8‚ô¶ 8‚ô• 8‚ô† T‚ô£ T‚ô¶], [8‚ô¶ 8‚ô• 8‚ô† T‚ô¶ T‚ô•], [8‚ô¶ 8‚ô• 8‚ô† T‚ô¶ T‚ô†]
}

func Example_royal() {
	for i, game := range []struct {
		seed    int64
		players int
	}{
		{119, 2},
		{155, 3},
		{384, 4},
		{880, 5},
		{3453, 2},
		{5662, 3},
		{65481, 4},
		{27947, 5},
	} {
		// note: use a real random source
		rnd := rand.New(rand.NewSource(game.seed))
		pockets, board := cardrank.Royal.Deal(rnd, game.players)
		hands := cardrank.Royal.RankHands(pockets, board)
		fmt.Printf("------ Royal %d ------\n", i+1)
		fmt.Printf("Board:    %b\n", board)
		for j := 0; j < game.players; j++ {
			fmt.Printf("Player %d: %b %s %b %b\n", j+1, hands[j].Pocket, hands[j].Description(), hands[j].HiBest, hands[j].HiUnused)
		}
		h, pivot := cardrank.HiOrder(hands)
		if pivot == 1 {
			fmt.Printf("Result:   Player %d wins with %s %b\n", h[0]+1, hands[h[0]].Description(), hands[h[0]].HiBest)
		} else {
			var s, b []string
			for j := 0; j < pivot; j++ {
				s = append(s, strconv.Itoa(h[j]+1))
				b = append(b, fmt.Sprintf("%b", hands[h[j]].HiBest))
			}
			fmt.Printf("Result:   Players %s push with %s %s\n", strings.Join(s, ", "), hands[h[0]].Description(), strings.Join(b, ", "))
		}
	}
	// Output:
	// ------ Royal 1 ------
	// Board:    [K‚ô¶ A‚ô¶ T‚ô• T‚ô£ J‚ô†]
	// Player 1: [A‚ô† T‚ô†] Full House, Tens full of Aces [T‚ô£ T‚ô• T‚ô† A‚ô¶ A‚ô†] [K‚ô¶ J‚ô†]
	// Player 2: [A‚ô• K‚ô†] Two Pair, Aces over Kings, kicker Jack [A‚ô¶ A‚ô• K‚ô¶ K‚ô† J‚ô†] [T‚ô£ T‚ô•]
	// Result:   Player 1 wins with Full House, Tens full of Aces [T‚ô£ T‚ô• T‚ô† A‚ô¶ A‚ô†]
	// ------ Royal 2 ------
	// Board:    [A‚ô£ K‚ô† J‚ô¶ Q‚ô£ J‚ô£]
	// Player 1: [A‚ô† Q‚ô†] Two Pair, Aces over Queens, kicker King [A‚ô£ A‚ô† Q‚ô£ Q‚ô† K‚ô†] [J‚ô£ J‚ô¶]
	// Player 2: [T‚ô† J‚ô•] Straight, Ace-high [A‚ô£ K‚ô† Q‚ô£ J‚ô£ T‚ô†] [J‚ô¶ J‚ô•]
	// Player 3: [K‚ô£ T‚ô•] Straight, Ace-high [A‚ô£ K‚ô£ Q‚ô£ J‚ô£ T‚ô•] [K‚ô† J‚ô¶]
	// Result:   Players 2, 3 push with Straight, Ace-high [A‚ô£ K‚ô† Q‚ô£ J‚ô£ T‚ô†], [A‚ô£ K‚ô£ Q‚ô£ J‚ô£ T‚ô•]
	// ------ Royal 3 ------
	// Board:    [K‚ô† T‚ô¶ T‚ô£ Q‚ô¶ A‚ô•]
	// Player 1: [T‚ô† T‚ô•] Four of a Kind, Tens, kicker Ace [T‚ô£ T‚ô¶ T‚ô• T‚ô† A‚ô•] [K‚ô† Q‚ô¶]
	// Player 2: [J‚ô£ Q‚ô£] Straight, Ace-high [A‚ô• K‚ô† Q‚ô£ J‚ô£ T‚ô£] [Q‚ô¶ T‚ô¶]
	// Player 3: [A‚ô¶ K‚ô¶] Two Pair, Aces over Kings, kicker Queen [A‚ô¶ A‚ô• K‚ô¶ K‚ô† Q‚ô¶] [T‚ô£ T‚ô¶]
	// Player 4: [K‚ô• K‚ô£] Full House, Kings full of Tens [K‚ô£ K‚ô• K‚ô† T‚ô£ T‚ô¶] [A‚ô• Q‚ô¶]
	// Result:   Player 1 wins with Four of a Kind, Tens, kicker Ace [T‚ô£ T‚ô¶ T‚ô• T‚ô† A‚ô•]
	// ------ Royal 4 ------
	// Board:    [J‚ô• A‚ô† T‚ô• T‚ô£ K‚ô†]
	// Player 1: [Q‚ô¶ T‚ô†] Straight, Ace-high [A‚ô† K‚ô† Q‚ô¶ J‚ô• T‚ô£] [T‚ô• T‚ô†]
	// Player 2: [K‚ô• T‚ô¶] Full House, Tens full of Kings [T‚ô£ T‚ô¶ T‚ô• K‚ô• K‚ô†] [A‚ô† J‚ô•]
	// Player 3: [A‚ô£ Q‚ô†] Straight, Ace-high [A‚ô£ K‚ô† Q‚ô† J‚ô• T‚ô£] [A‚ô† T‚ô•]
	// Player 4: [A‚ô¶ J‚ô†] Two Pair, Aces over Jacks, kicker King [A‚ô¶ A‚ô† J‚ô• J‚ô† K‚ô†] [T‚ô£ T‚ô•]
	// Player 5: [K‚ô¶ J‚ô¶] Two Pair, Kings over Jacks, kicker Ace [K‚ô¶ K‚ô† J‚ô¶ J‚ô• A‚ô†] [T‚ô£ T‚ô•]
	// Result:   Player 2 wins with Full House, Tens full of Kings [T‚ô£ T‚ô¶ T‚ô• K‚ô• K‚ô†]
	// ------ Royal 5 ------
	// Board:    [J‚ô£ K‚ô• K‚ô† J‚ô• Q‚ô£]
	// Player 1: [A‚ô• T‚ô¶] Straight, Ace-high [A‚ô• K‚ô• Q‚ô£ J‚ô£ T‚ô¶] [K‚ô† J‚ô•]
	// Player 2: [J‚ô¶ Q‚ô†] Full House, Jacks full of Kings [J‚ô£ J‚ô¶ J‚ô• K‚ô• K‚ô†] [Q‚ô£ Q‚ô†]
	// Result:   Player 2 wins with Full House, Jacks full of Kings [J‚ô£ J‚ô¶ J‚ô• K‚ô• K‚ô†]
	// ------ Royal 6 ------
	// Board:    [K‚ô• A‚ô† K‚ô¶ K‚ô† A‚ô£]
	// Player 1: [J‚ô• J‚ô†] Full House, Kings full of Aces [K‚ô¶ K‚ô• K‚ô† A‚ô£ A‚ô†] [J‚ô• J‚ô†]
	// Player 2: [Q‚ô¶ A‚ô•] Full House, Aces full of Kings [A‚ô£ A‚ô• A‚ô† K‚ô¶ K‚ô•] [K‚ô† Q‚ô¶]
	// Player 3: [Q‚ô† T‚ô£] Full House, Kings full of Aces [K‚ô¶ K‚ô• K‚ô† A‚ô£ A‚ô†] [Q‚ô† T‚ô£]
	// Result:   Player 2 wins with Full House, Aces full of Kings [A‚ô£ A‚ô• A‚ô† K‚ô¶ K‚ô•]
	// ------ Royal 7 ------
	// Board:    [J‚ô• T‚ô¶ Q‚ô† K‚ô£ K‚ô•]
	// Player 1: [K‚ô¶ J‚ô£] Full House, Kings full of Jacks [K‚ô£ K‚ô¶ K‚ô• J‚ô£ J‚ô•] [Q‚ô† T‚ô¶]
	// Player 2: [T‚ô• T‚ô†] Full House, Tens full of Kings [T‚ô¶ T‚ô• T‚ô† K‚ô£ K‚ô•] [Q‚ô† J‚ô•]
	// Player 3: [A‚ô† A‚ô•] Straight, Ace-high [A‚ô• K‚ô£ Q‚ô† J‚ô• T‚ô¶] [A‚ô† K‚ô•]
	// Player 4: [Q‚ô£ A‚ô¶] Straight, Ace-high [A‚ô¶ K‚ô£ Q‚ô£ J‚ô• T‚ô¶] [K‚ô• Q‚ô†]
	// Result:   Player 1 wins with Full House, Kings full of Jacks [K‚ô£ K‚ô¶ K‚ô• J‚ô£ J‚ô•]
	// ------ Royal 8 ------
	// Board:    [A‚ô† K‚ô¶ Q‚ô¶ A‚ô¶ A‚ô£]
	// Player 1: [Q‚ô† J‚ô†] Full House, Aces full of Queens [A‚ô£ A‚ô¶ A‚ô† Q‚ô¶ Q‚ô†] [K‚ô¶ J‚ô†]
	// Player 2: [T‚ô¶ A‚ô•] Four of a Kind, Aces, kicker King [A‚ô£ A‚ô¶ A‚ô• A‚ô† K‚ô¶] [Q‚ô¶ T‚ô¶]
	// Player 3: [J‚ô• K‚ô†] Full House, Aces full of Kings [A‚ô£ A‚ô¶ A‚ô† K‚ô¶ K‚ô†] [Q‚ô¶ J‚ô•]
	// Player 4: [Q‚ô• J‚ô¶] Full House, Aces full of Queens [A‚ô£ A‚ô¶ A‚ô† Q‚ô¶ Q‚ô•] [K‚ô¶ J‚ô¶]
	// Player 5: [K‚ô£ T‚ô•] Full House, Aces full of Kings [A‚ô£ A‚ô¶ A‚ô† K‚ô£ K‚ô¶] [Q‚ô¶ T‚ô•]
	// Result:   Player 2 wins with Four of a Kind, Aces, kicker King [A‚ô£ A‚ô¶ A‚ô• A‚ô† K‚ô¶]
}

func Example_omaha() {
	for i, game := range []struct {
		seed    int64
		players int
	}{
		{119, 2},
		{321, 5},
		{408, 6},
		{455, 6},
		{1113, 6},
	} {
		// note: use a real random source
		rnd := rand.New(rand.NewSource(game.seed))
		pockets, board := cardrank.Omaha.Deal(rnd, game.players)
		hands := cardrank.Omaha.RankHands(pockets, board)
		fmt.Printf("------ Omaha %d ------\n", i+1)
		fmt.Printf("Board:    %b\n", board)
		for j := 0; j < game.players; j++ {
			fmt.Printf("Player %d: %b %s %b %b\n", j+1, hands[j].Pocket, hands[j].Description(), hands[j].HiBest, hands[j].HiUnused)
		}
		h, pivot := cardrank.HiOrder(hands)
		if pivot == 1 {
			fmt.Printf("Result:   Player %d wins with %s %b\n", h[0]+1, hands[h[0]].Description(), hands[h[0]].HiBest)
		} else {
			var s, b []string
			for j := 0; j < pivot; j++ {
				s = append(s, strconv.Itoa(h[j]+1))
				b = append(b, fmt.Sprintf("%b", hands[h[j]].HiBest))
			}
			fmt.Printf("Result:   Players %s push with %s %s\n", strings.Join(s, ", "), hands[h[0]].Description(), strings.Join(b, ", "))
		}
	}
	// Output:
	// ------ Omaha 1 ------
	// Board:    [3‚ô• 5‚ô• 4‚ô• 7‚ô• K‚ô£]
	// Player 1: [K‚ô• J‚ô£ A‚ô• Q‚ô†] Flush, Ace-high [A‚ô• K‚ô• 7‚ô• 5‚ô• 4‚ô•] [J‚ô£ Q‚ô† 3‚ô• K‚ô£]
	// Player 2: [7‚ô£ 4‚ô£ 5‚ô† 2‚ô†] Two Pair, Sevens over Fives, kicker King [7‚ô£ 7‚ô• 5‚ô• 5‚ô† K‚ô£] [4‚ô£ 2‚ô† 3‚ô• 4‚ô•]
	// Result:   Player 1 wins with Flush, Ace-high [A‚ô• K‚ô• 7‚ô• 5‚ô• 4‚ô•]
	// ------ Omaha 2 ------
	// Board:    [3‚ô• 7‚ô£ 3‚ô£ 9‚ô† 9‚ô£]
	// Player 1: [3‚ô† 3‚ô¶ T‚ô† Q‚ô†] Four of a Kind, Threes, kicker Nine [3‚ô£ 3‚ô¶ 3‚ô• 3‚ô† 9‚ô†] [T‚ô† Q‚ô† 7‚ô£ 9‚ô£]
	// Player 2: [6‚ô¶ Q‚ô£ 8‚ô• 6‚ô£] Flush, Queen-high [Q‚ô£ 9‚ô£ 7‚ô£ 6‚ô£ 3‚ô£] [6‚ô¶ 8‚ô• 3‚ô• 9‚ô†]
	// Player 3: [Q‚ô¶ K‚ô† 8‚ô£ A‚ô•] Pair, Nines, kickers Ace, King, Seven [9‚ô£ 9‚ô† A‚ô• K‚ô† 7‚ô£] [Q‚ô¶ 8‚ô£ 3‚ô• 3‚ô£]
	// Player 4: [K‚ô¶ T‚ô¶ 8‚ô¶ 4‚ô•] Pair, Nines, kickers King, Ten, Seven [9‚ô£ 9‚ô† K‚ô¶ T‚ô¶ 7‚ô£] [8‚ô¶ 4‚ô• 3‚ô• 3‚ô£]
	// Player 5: [J‚ô¶ 2‚ô• Q‚ô• 6‚ô†] Pair, Nines, kickers Queen, Jack, Seven [9‚ô£ 9‚ô† Q‚ô• J‚ô¶ 7‚ô£] [2‚ô• 6‚ô† 3‚ô• 3‚ô£]
	// Result:   Player 1 wins with Four of a Kind, Threes, kicker Nine [3‚ô£ 3‚ô¶ 3‚ô• 3‚ô† 9‚ô†]
	// ------ Omaha 3 ------
	// Board:    [J‚ô£ T‚ô• 4‚ô• K‚ô£ Q‚ô£]
	// Player 1: [K‚ô† Q‚ô† 4‚ô£ J‚ô¶] Two Pair, Kings over Queens, kicker Jack [K‚ô£ K‚ô† Q‚ô£ Q‚ô† J‚ô£] [4‚ô£ J‚ô¶ T‚ô• 4‚ô•]
	// Player 2: [J‚ô† 3‚ô£ 8‚ô• 2‚ô†] Pair, Jacks, kickers King, Queen, Eight [J‚ô£ J‚ô† K‚ô£ Q‚ô£ 8‚ô•] [3‚ô£ 2‚ô† T‚ô• 4‚ô•]
	// Player 3: [3‚ô† T‚ô† 2‚ô£ Q‚ô¶] Two Pair, Queens over Tens, kicker King [Q‚ô£ Q‚ô¶ T‚ô• T‚ô† K‚ô£] [3‚ô† 2‚ô£ J‚ô£ 4‚ô•]
	// Player 4: [5‚ô£ 5‚ô• T‚ô¶ 2‚ô¶] Pair, Tens, kickers King, Queen, Five [T‚ô¶ T‚ô• K‚ô£ Q‚ô£ 5‚ô£] [5‚ô• 2‚ô¶ J‚ô£ 4‚ô•]
	// Player 5: [7‚ô† 3‚ô• 6‚ô† A‚ô£] Nothing, Ace-high, kickers King, Queen, Jack, Seven [A‚ô£ K‚ô£ Q‚ô£ J‚ô£ 7‚ô†] [3‚ô• 6‚ô† T‚ô• 4‚ô•]
	// Player 6: [4‚ô† 8‚ô¶ K‚ô¶ T‚ô£] Two Pair, Kings over Tens, kicker Queen [K‚ô£ K‚ô¶ T‚ô£ T‚ô• Q‚ô£] [4‚ô† 8‚ô¶ J‚ô£ 4‚ô•]
	// Result:   Player 1 wins with Two Pair, Kings over Queens, kicker Jack [K‚ô£ K‚ô† Q‚ô£ Q‚ô† J‚ô£]
	// ------ Omaha 4 ------
	// Board:    [2‚ô¶ 6‚ô¶ 6‚ô£ Q‚ô£ 7‚ô£]
	// Player 1: [6‚ô† K‚ô• A‚ô£ 8‚ô£] Flush, Ace-high [A‚ô£ Q‚ô£ 8‚ô£ 7‚ô£ 6‚ô£] [6‚ô† K‚ô• 2‚ô¶ 6‚ô¶]
	// Player 2: [Q‚ô• 4‚ô• J‚ô£ 5‚ô•] Two Pair, Queens over Sixes, kicker Jack [Q‚ô£ Q‚ô• 6‚ô£ 6‚ô¶ J‚ô£] [4‚ô• 5‚ô• 2‚ô¶ 7‚ô£]
	// Player 3: [2‚ô£ 6‚ô• 5‚ô£ Q‚ô†] Full House, Sixes full of Queens [6‚ô£ 6‚ô¶ 6‚ô• Q‚ô£ Q‚ô†] [2‚ô£ 5‚ô£ 2‚ô¶ 7‚ô£]
	// Player 4: [9‚ô† J‚ô• K‚ô† J‚ô†] Two Pair, Jacks over Sixes, kicker Queen [J‚ô• J‚ô† 6‚ô£ 6‚ô¶ Q‚ô£] [9‚ô† K‚ô† 2‚ô¶ 7‚ô£]
	// Player 5: [3‚ô¶ 4‚ô¶ K‚ô£ 8‚ô¶] Pair, Sixes, kickers King, Queen, Eight [6‚ô£ 6‚ô¶ K‚ô£ Q‚ô£ 8‚ô¶] [3‚ô¶ 4‚ô¶ 2‚ô¶ 7‚ô£]
	// Player 6: [T‚ô£ Q‚ô¶ A‚ô† 7‚ô•] Two Pair, Queens over Sevens, kicker Six [Q‚ô£ Q‚ô¶ 7‚ô£ 7‚ô• 6‚ô¶] [T‚ô£ A‚ô† 2‚ô¶ 6‚ô£]
	// Result:   Player 3 wins with Full House, Sixes full of Queens [6‚ô£ 6‚ô¶ 6‚ô• Q‚ô£ Q‚ô†]
	// ------ Omaha 5 ------
	// Board:    [4‚ô£ K‚ô£ 6‚ô¶ 9‚ô¶ 5‚ô†]
	// Player 1: [3‚ô¶ 4‚ô¶ 5‚ô¶ J‚ô£] Two Pair, Fives over Fours, kicker King [5‚ô¶ 5‚ô† 4‚ô£ 4‚ô¶ K‚ô£] [3‚ô¶ J‚ô£ 6‚ô¶ 9‚ô¶]
	// Player 2: [T‚ô• J‚ô† K‚ô† 2‚ô£] Pair, Kings, kickers Jack, Nine, Six [K‚ô£ K‚ô† J‚ô† 9‚ô¶ 6‚ô¶] [T‚ô• 2‚ô£ 4‚ô£ 5‚ô†]
	// Player 3: [A‚ô£ 9‚ô† T‚ô† 3‚ô†] Pair, Nines, kickers Ace, King, Six [9‚ô¶ 9‚ô† A‚ô£ K‚ô£ 6‚ô¶] [T‚ô† 3‚ô† 4‚ô£ 5‚ô†]
	// Player 4: [7‚ô¶ 3‚ô£ 8‚ô† 7‚ô£] Straight, Nine-high [9‚ô¶ 8‚ô† 7‚ô¶ 6‚ô¶ 5‚ô†] [3‚ô£ 7‚ô£ 4‚ô£ K‚ô£]
	// Player 5: [5‚ô£ Q‚ô† J‚ô• 2‚ô†] Pair, Fives, kickers King, Queen, Nine [5‚ô£ 5‚ô† K‚ô£ Q‚ô† 9‚ô¶] [J‚ô• 2‚ô† 4‚ô£ 6‚ô¶]
	// Player 6: [6‚ô† 7‚ô† 7‚ô• 2‚ô•] Pair, Sevens, kickers King, Nine, Six [7‚ô• 7‚ô† K‚ô£ 9‚ô¶ 6‚ô¶] [6‚ô† 2‚ô• 4‚ô£ 5‚ô†]
	// Result:   Player 4 wins with Straight, Nine-high [9‚ô¶ 8‚ô† 7‚ô¶ 6‚ô¶ 5‚ô†]
}

func Example_omahaHiLo() {
	for i, game := range []struct {
		seed    int64
		players int
	}{
		{119, 2},
		{321, 5},
		{408, 6},
		{455, 6},
		{1113, 6},
	} {
		// note: use a real random source
		rnd := rand.New(rand.NewSource(game.seed))
		pockets, board := cardrank.OmahaHiLo.Deal(rnd, game.players)
		hands := cardrank.OmahaHiLo.RankHands(pockets, board)
		fmt.Printf("------ OmahaHiLo %d ------\n", i+1)
		fmt.Printf("Board: %b\n", board)
		for j := 0; j < game.players; j++ {
			fmt.Printf("Player %d: %b\n", j+1, pockets[j])
			fmt.Printf("  Hi: %s %b %b\n", hands[j].Description(), hands[j].HiBest, hands[j].HiUnused)
			fmt.Printf("  Lo: %s %b %b\n", hands[j].LowDescription(), hands[j].LoBest, hands[j].LoUnused)
		}
		h, hPivot := cardrank.HiOrder(hands)
		l, lPivot := cardrank.LoOrder(hands)
		typ := "wins"
		if lPivot == 0 {
			typ = "scoops"
		}
		if hPivot == 1 {
			fmt.Printf("Result (Hi): Player %d %s with %s %b\n", h[0]+1, typ, hands[h[0]].Description(), hands[h[0]].HiBest)
		} else {
			var s, b []string
			for j := 0; j < hPivot; j++ {
				s = append(s, strconv.Itoa(h[j]+1))
				b = append(b, fmt.Sprintf("%b", hands[h[j]].HiBest))
			}
			fmt.Printf("Result (Hi): Players %s push with %s %s\n", strings.Join(s, ", "), hands[h[0]].Description(), strings.Join(b, ", "))
		}
		if lPivot == 1 {
			fmt.Printf("Result (Lo): Player %d wins with %s %b\n", l[0]+1, hands[l[0]].LowDescription(), hands[l[0]].LoBest)
		} else if lPivot > 1 {
			var s, b []string
			for j := 0; j < lPivot; j++ {
				s = append(s, strconv.Itoa(l[j]+1))
				b = append(b, fmt.Sprintf("%b", hands[l[j]].LoBest))
			}
			fmt.Printf("Result (Lo): Players %s push with %s %s\n", strings.Join(s, ", "), hands[l[0]].LowDescription(), strings.Join(b, ", "))
		} else {
			fmt.Printf("Result (Lo): no player made a low hand\n")
		}
	}
	// Output:
	// ------ OmahaHiLo 1 ------
	// Board: [3‚ô• 5‚ô• 4‚ô• 7‚ô• K‚ô£]
	// Player 1: [K‚ô• J‚ô£ A‚ô• Q‚ô†]
	//   Hi: Flush, Ace-high [A‚ô• K‚ô• 7‚ô• 5‚ô• 4‚ô•] [J‚ô£ Q‚ô† 3‚ô• K‚ô£]
	//   Lo: None [] []
	// Player 2: [7‚ô£ 4‚ô£ 5‚ô† 2‚ô†]
	//   Hi: Two Pair, Sevens over Fives, kicker King [7‚ô£ 7‚ô• 5‚ô• 5‚ô† K‚ô£] [4‚ô£ 2‚ô† 3‚ô• 4‚ô•]
	//   Lo: Seven, Five, Four, Three, Two-low [7‚ô£ 5‚ô• 4‚ô• 3‚ô• 2‚ô†] [4‚ô£ 5‚ô† 7‚ô• K‚ô£]
	// Result (Hi): Player 1 wins with Flush, Ace-high [A‚ô• K‚ô• 7‚ô• 5‚ô• 4‚ô•]
	// Result (Lo): Player 2 wins with Seven, Five, Four, Three, Two-low [7‚ô£ 5‚ô• 4‚ô• 3‚ô• 2‚ô†]
	// ------ OmahaHiLo 2 ------
	// Board: [3‚ô• 7‚ô£ 3‚ô£ 9‚ô† 9‚ô£]
	// Player 1: [3‚ô† 3‚ô¶ T‚ô† Q‚ô†]
	//   Hi: Four of a Kind, Threes, kicker Nine [3‚ô£ 3‚ô¶ 3‚ô• 3‚ô† 9‚ô†] [T‚ô† Q‚ô† 7‚ô£ 9‚ô£]
	//   Lo: None [] []
	// Player 2: [6‚ô¶ Q‚ô£ 8‚ô• 6‚ô£]
	//   Hi: Flush, Queen-high [Q‚ô£ 9‚ô£ 7‚ô£ 6‚ô£ 3‚ô£] [6‚ô¶ 8‚ô• 3‚ô• 9‚ô†]
	//   Lo: None [] []
	// Player 3: [Q‚ô¶ K‚ô† 8‚ô£ A‚ô•]
	//   Hi: Pair, Nines, kickers Ace, King, Seven [9‚ô£ 9‚ô† A‚ô• K‚ô† 7‚ô£] [Q‚ô¶ 8‚ô£ 3‚ô• 3‚ô£]
	//   Lo: None [] []
	// Player 4: [K‚ô¶ T‚ô¶ 8‚ô¶ 4‚ô•]
	//   Hi: Pair, Nines, kickers King, Ten, Seven [9‚ô£ 9‚ô† K‚ô¶ T‚ô¶ 7‚ô£] [8‚ô¶ 4‚ô• 3‚ô• 3‚ô£]
	//   Lo: None [] []
	// Player 5: [J‚ô¶ 2‚ô• Q‚ô• 6‚ô†]
	//   Hi: Pair, Nines, kickers Queen, Jack, Seven [9‚ô£ 9‚ô† Q‚ô• J‚ô¶ 7‚ô£] [2‚ô• 6‚ô† 3‚ô• 3‚ô£]
	//   Lo: None [] []
	// Result (Hi): Player 1 scoops with Four of a Kind, Threes, kicker Nine [3‚ô£ 3‚ô¶ 3‚ô• 3‚ô† 9‚ô†]
	// Result (Lo): no player made a low hand
	// ------ OmahaHiLo 3 ------
	// Board: [J‚ô£ T‚ô• 4‚ô• K‚ô£ Q‚ô£]
	// Player 1: [K‚ô† Q‚ô† 4‚ô£ J‚ô¶]
	//   Hi: Two Pair, Kings over Queens, kicker Jack [K‚ô£ K‚ô† Q‚ô£ Q‚ô† J‚ô£] [4‚ô£ J‚ô¶ T‚ô• 4‚ô•]
	//   Lo: None [] []
	// Player 2: [J‚ô† 3‚ô£ 8‚ô• 2‚ô†]
	//   Hi: Pair, Jacks, kickers King, Queen, Eight [J‚ô£ J‚ô† K‚ô£ Q‚ô£ 8‚ô•] [3‚ô£ 2‚ô† T‚ô• 4‚ô•]
	//   Lo: None [] []
	// Player 3: [3‚ô† T‚ô† 2‚ô£ Q‚ô¶]
	//   Hi: Two Pair, Queens over Tens, kicker King [Q‚ô£ Q‚ô¶ T‚ô• T‚ô† K‚ô£] [3‚ô† 2‚ô£ J‚ô£ 4‚ô•]
	//   Lo: None [] []
	// Player 4: [5‚ô£ 5‚ô• T‚ô¶ 2‚ô¶]
	//   Hi: Pair, Tens, kickers King, Queen, Five [T‚ô¶ T‚ô• K‚ô£ Q‚ô£ 5‚ô£] [5‚ô• 2‚ô¶ J‚ô£ 4‚ô•]
	//   Lo: None [] []
	// Player 5: [7‚ô† 3‚ô• 6‚ô† A‚ô£]
	//   Hi: Nothing, Ace-high, kickers King, Queen, Jack, Seven [A‚ô£ K‚ô£ Q‚ô£ J‚ô£ 7‚ô†] [3‚ô• 6‚ô† T‚ô• 4‚ô•]
	//   Lo: None [] []
	// Player 6: [4‚ô† 8‚ô¶ K‚ô¶ T‚ô£]
	//   Hi: Two Pair, Kings over Tens, kicker Queen [K‚ô£ K‚ô¶ T‚ô£ T‚ô• Q‚ô£] [4‚ô† 8‚ô¶ J‚ô£ 4‚ô•]
	//   Lo: None [] []
	// Result (Hi): Player 1 scoops with Two Pair, Kings over Queens, kicker Jack [K‚ô£ K‚ô† Q‚ô£ Q‚ô† J‚ô£]
	// Result (Lo): no player made a low hand
	// ------ OmahaHiLo 4 ------
	// Board: [2‚ô¶ 6‚ô¶ 6‚ô£ Q‚ô£ 7‚ô£]
	// Player 1: [6‚ô† K‚ô• A‚ô£ 8‚ô£]
	//   Hi: Flush, Ace-high [A‚ô£ Q‚ô£ 8‚ô£ 7‚ô£ 6‚ô£] [6‚ô† K‚ô• 2‚ô¶ 6‚ô¶]
	//   Lo: Eight, Seven, Six, Two, Ace-low [8‚ô£ 7‚ô£ 6‚ô¶ 2‚ô¶ A‚ô£] [6‚ô† K‚ô• 6‚ô£ Q‚ô£]
	// Player 2: [Q‚ô• 4‚ô• J‚ô£ 5‚ô•]
	//   Hi: Two Pair, Queens over Sixes, kicker Jack [Q‚ô£ Q‚ô• 6‚ô£ 6‚ô¶ J‚ô£] [4‚ô• 5‚ô• 2‚ô¶ 7‚ô£]
	//   Lo: Seven, Six, Five, Four, Two-low [7‚ô£ 6‚ô¶ 5‚ô• 4‚ô• 2‚ô¶] [Q‚ô• J‚ô£ 6‚ô£ Q‚ô£]
	// Player 3: [2‚ô£ 6‚ô• 5‚ô£ Q‚ô†]
	//   Hi: Full House, Sixes full of Queens [6‚ô£ 6‚ô¶ 6‚ô• Q‚ô£ Q‚ô†] [2‚ô£ 5‚ô£ 2‚ô¶ 7‚ô£]
	//   Lo: None [] []
	// Player 4: [9‚ô† J‚ô• K‚ô† J‚ô†]
	//   Hi: Two Pair, Jacks over Sixes, kicker Queen [J‚ô• J‚ô† 6‚ô£ 6‚ô¶ Q‚ô£] [9‚ô† K‚ô† 2‚ô¶ 7‚ô£]
	//   Lo: None [] []
	// Player 5: [3‚ô¶ 4‚ô¶ K‚ô£ 8‚ô¶]
	//   Hi: Pair, Sixes, kickers King, Queen, Eight [6‚ô£ 6‚ô¶ K‚ô£ Q‚ô£ 8‚ô¶] [3‚ô¶ 4‚ô¶ 2‚ô¶ 7‚ô£]
	//   Lo: Seven, Six, Four, Three, Two-low [7‚ô£ 6‚ô¶ 4‚ô¶ 3‚ô¶ 2‚ô¶] [K‚ô£ 8‚ô¶ 6‚ô£ Q‚ô£]
	// Player 6: [T‚ô£ Q‚ô¶ A‚ô† 7‚ô•]
	//   Hi: Two Pair, Queens over Sevens, kicker Six [Q‚ô£ Q‚ô¶ 7‚ô£ 7‚ô• 6‚ô¶] [T‚ô£ A‚ô† 2‚ô¶ 6‚ô£]
	//   Lo: None [] []
	// Result (Hi): Player 3 wins with Full House, Sixes full of Queens [6‚ô£ 6‚ô¶ 6‚ô• Q‚ô£ Q‚ô†]
	// Result (Lo): Player 5 wins with Seven, Six, Four, Three, Two-low [7‚ô£ 6‚ô¶ 4‚ô¶ 3‚ô¶ 2‚ô¶]
	// ------ OmahaHiLo 5 ------
	// Board: [4‚ô£ K‚ô£ 6‚ô¶ 9‚ô¶ 5‚ô†]
	// Player 1: [3‚ô¶ 4‚ô¶ 5‚ô¶ J‚ô£]
	//   Hi: Two Pair, Fives over Fours, kicker King [5‚ô¶ 5‚ô† 4‚ô£ 4‚ô¶ K‚ô£] [3‚ô¶ J‚ô£ 6‚ô¶ 9‚ô¶]
	//   Lo: None [] []
	// Player 2: [T‚ô• J‚ô† K‚ô† 2‚ô£]
	//   Hi: Pair, Kings, kickers Jack, Nine, Six [K‚ô£ K‚ô† J‚ô† 9‚ô¶ 6‚ô¶] [T‚ô• 2‚ô£ 4‚ô£ 5‚ô†]
	//   Lo: None [] []
	// Player 3: [A‚ô£ 9‚ô† T‚ô† 3‚ô†]
	//   Hi: Pair, Nines, kickers Ace, King, Six [9‚ô¶ 9‚ô† A‚ô£ K‚ô£ 6‚ô¶] [T‚ô† 3‚ô† 4‚ô£ 5‚ô†]
	//   Lo: Six, Five, Four, Three, Ace-low [6‚ô¶ 5‚ô† 4‚ô£ 3‚ô† A‚ô£] [9‚ô† T‚ô† K‚ô£ 9‚ô¶]
	// Player 4: [7‚ô¶ 3‚ô£ 8‚ô† 7‚ô£]
	//   Hi: Straight, Nine-high [9‚ô¶ 8‚ô† 7‚ô¶ 6‚ô¶ 5‚ô†] [3‚ô£ 7‚ô£ 4‚ô£ K‚ô£]
	//   Lo: Seven, Six, Five, Four, Three-low [7‚ô¶ 6‚ô¶ 5‚ô† 4‚ô£ 3‚ô£] [8‚ô† 7‚ô£ K‚ô£ 9‚ô¶]
	// Player 5: [5‚ô£ Q‚ô† J‚ô• 2‚ô†]
	//   Hi: Pair, Fives, kickers King, Queen, Nine [5‚ô£ 5‚ô† K‚ô£ Q‚ô† 9‚ô¶] [J‚ô• 2‚ô† 4‚ô£ 6‚ô¶]
	//   Lo: None [] []
	// Player 6: [6‚ô† 7‚ô† 7‚ô• 2‚ô•]
	//   Hi: Pair, Sevens, kickers King, Nine, Six [7‚ô• 7‚ô† K‚ô£ 9‚ô¶ 6‚ô¶] [6‚ô† 2‚ô• 4‚ô£ 5‚ô†]
	//   Lo: Seven, Six, Five, Four, Two-low [7‚ô† 6‚ô¶ 5‚ô† 4‚ô£ 2‚ô•] [6‚ô† 7‚ô• K‚ô£ 9‚ô¶]
	// Result (Hi): Player 4 wins with Straight, Nine-high [9‚ô¶ 8‚ô† 7‚ô¶ 6‚ô¶ 5‚ô†]
	// Result (Lo): Player 3 wins with Six, Five, Four, Three, Ace-low [6‚ô¶ 5‚ô† 4‚ô£ 3‚ô† A‚ô£]
}

func Example_omahaMultiBoard() {
	for i, game := range []struct {
		seed    int64
		players int
	}{
		{119, 2},
		{321, 5},
		{408, 6},
		{455, 6},
		{1113, 6},
	} {
		// note: use a real random source
		rnd := rand.New(rand.NewSource(game.seed))
		deck := cardrank.Omaha.Deck()
		deck.Shuffle(rnd)
		pockets := deck.Deal(game.players, 4)
		boards := deck.MultiBoard(2, 1, 3, 1, 1)
		fmt.Printf("------ Omaha MultiBoard %d ------\n", i+1)
		for j := 0; j < len(boards); j++ {
			fmt.Printf("Board %d:    %b\n", j+1, boards[j])
			hands := cardrank.Omaha.RankHands(pockets, boards[j])
			for k := 0; k < game.players; k++ {
				fmt.Printf("  Player %d: %b %s %b %b\n", k+1, hands[k].Pocket, hands[k].Description(), hands[k].HiBest, hands[k].HiUnused)
			}
			h, pivot := cardrank.HiOrder(hands)
			if pivot == 1 {
				fmt.Printf("Result %d:   Player %d wins with %s %b\n", j+1, h[0]+1, hands[h[0]].Description(), hands[h[0]].HiBest)
			} else {
				var s, b []string
				for j := 0; j < pivot; j++ {
					s = append(s, strconv.Itoa(h[j]+1))
					b = append(b, fmt.Sprintf("%b", hands[h[j]].HiBest))
				}
				fmt.Printf("Result %d:   Players %s push with %s %s\n", j+1, strings.Join(s, ", "), hands[h[0]].Description(), strings.Join(b, ", "))
			}
		}
	}
	// Output:
	// ------ Omaha MultiBoard 1 ------
	// Board 1:    [3‚ô• 5‚ô• 4‚ô• 9‚ô¶ 7‚ô¶]
	//   Player 1: [K‚ô• J‚ô£ A‚ô• Q‚ô†] Flush, Ace-high [A‚ô• K‚ô• 5‚ô• 4‚ô• 3‚ô•] [J‚ô£ Q‚ô† 9‚ô¶ 7‚ô¶]
	//   Player 2: [7‚ô£ 4‚ô£ 5‚ô† 2‚ô†] Two Pair, Sevens over Fives, kicker Nine [7‚ô£ 7‚ô¶ 5‚ô• 5‚ô† 9‚ô¶] [4‚ô£ 2‚ô† 3‚ô• 4‚ô•]
	// Result 1:   Player 1 wins with Flush, Ace-high [A‚ô• K‚ô• 5‚ô• 4‚ô• 3‚ô•]
	// Board 2:    [7‚ô• K‚ô¶ K‚ô£ 9‚ô• T‚ô•]
	//   Player 1: [K‚ô• J‚ô£ A‚ô• Q‚ô†] Flush, Ace-high [A‚ô• K‚ô• T‚ô• 9‚ô• 7‚ô•] [J‚ô£ Q‚ô† K‚ô¶ K‚ô£]
	//   Player 2: [7‚ô£ 4‚ô£ 5‚ô† 2‚ô†] Two Pair, Kings over Sevens, kicker Five [K‚ô£ K‚ô¶ 7‚ô£ 7‚ô• 5‚ô†] [4‚ô£ 2‚ô† 9‚ô• T‚ô•]
	// Result 2:   Player 1 wins with Flush, Ace-high [A‚ô• K‚ô• T‚ô• 9‚ô• 7‚ô•]
	// ------ Omaha MultiBoard 2 ------
	// Board 1:    [3‚ô• 7‚ô£ 3‚ô£ 7‚ô† 2‚ô¶]
	//   Player 1: [3‚ô† 3‚ô¶ T‚ô† Q‚ô†] Four of a Kind, Threes, kicker Seven [3‚ô£ 3‚ô¶ 3‚ô• 3‚ô† 7‚ô£] [T‚ô† Q‚ô† 7‚ô† 2‚ô¶]
	//   Player 2: [6‚ô¶ Q‚ô£ 8‚ô• 6‚ô£] Two Pair, Sevens over Sixes, kicker Three [7‚ô£ 7‚ô† 6‚ô£ 6‚ô¶ 3‚ô•] [Q‚ô£ 8‚ô• 3‚ô£ 2‚ô¶]
	//   Player 3: [Q‚ô¶ K‚ô† 8‚ô£ A‚ô•] Pair, Sevens, kickers Ace, King, Three [7‚ô£ 7‚ô† A‚ô• K‚ô† 3‚ô•] [Q‚ô¶ 8‚ô£ 3‚ô£ 2‚ô¶]
	//   Player 4: [K‚ô¶ T‚ô¶ 8‚ô¶ 4‚ô•] Pair, Sevens, kickers King, Ten, Three [7‚ô£ 7‚ô† K‚ô¶ T‚ô¶ 3‚ô•] [8‚ô¶ 4‚ô• 3‚ô£ 2‚ô¶]
	//   Player 5: [J‚ô¶ 2‚ô• Q‚ô• 6‚ô†] Two Pair, Sevens over Twos, kicker Queen [7‚ô£ 7‚ô† 2‚ô¶ 2‚ô• Q‚ô•] [J‚ô¶ 6‚ô† 3‚ô• 3‚ô£]
	// Result 1:   Player 1 wins with Four of a Kind, Threes, kicker Seven [3‚ô£ 3‚ô¶ 3‚ô• 3‚ô† 7‚ô£]
	// Board 2:    [9‚ô† T‚ô£ 9‚ô£ 7‚ô• J‚ô£]
	//   Player 1: [3‚ô† 3‚ô¶ T‚ô† Q‚ô†] Two Pair, Tens over Nines, kicker Queen [T‚ô£ T‚ô† 9‚ô£ 9‚ô† Q‚ô†] [3‚ô† 3‚ô¶ 7‚ô• J‚ô£]
	//   Player 2: [6‚ô¶ Q‚ô£ 8‚ô• 6‚ô£] Flush, Queen-high [Q‚ô£ J‚ô£ T‚ô£ 9‚ô£ 6‚ô£] [6‚ô¶ 8‚ô• 9‚ô† 7‚ô•]
	//   Player 3: [Q‚ô¶ K‚ô† 8‚ô£ A‚ô•] Straight, King-high [K‚ô† Q‚ô¶ J‚ô£ T‚ô£ 9‚ô†] [8‚ô£ A‚ô• 9‚ô£ 7‚ô•]
	//   Player 4: [K‚ô¶ T‚ô¶ 8‚ô¶ 4‚ô•] Straight, Jack-high [J‚ô£ T‚ô¶ 9‚ô† 8‚ô¶ 7‚ô•] [K‚ô¶ 4‚ô• T‚ô£ 9‚ô£]
	//   Player 5: [J‚ô¶ 2‚ô• Q‚ô• 6‚ô†] Two Pair, Jacks over Nines, kicker Queen [J‚ô£ J‚ô¶ 9‚ô£ 9‚ô† Q‚ô•] [2‚ô• 6‚ô† T‚ô£ 7‚ô•]
	// Result 2:   Player 2 wins with Flush, Queen-high [Q‚ô£ J‚ô£ T‚ô£ 9‚ô£ 6‚ô£]
	// ------ Omaha MultiBoard 3 ------
	// Board 1:    [J‚ô£ T‚ô• 4‚ô• 9‚ô¶ 7‚ô¶]
	//   Player 1: [K‚ô† Q‚ô† 4‚ô£ J‚ô¶] Straight, King-high [K‚ô† Q‚ô† J‚ô£ T‚ô• 9‚ô¶] [4‚ô£ J‚ô¶ 4‚ô• 7‚ô¶]
	//   Player 2: [J‚ô† 3‚ô£ 8‚ô• 2‚ô†] Straight, Jack-high [J‚ô† T‚ô• 9‚ô¶ 8‚ô• 7‚ô¶] [3‚ô£ 2‚ô† J‚ô£ 4‚ô•]
	//   Player 3: [3‚ô† T‚ô† 2‚ô£ Q‚ô¶] Pair, Tens, kickers Queen, Jack, Nine [T‚ô• T‚ô† Q‚ô¶ J‚ô£ 9‚ô¶] [3‚ô† 2‚ô£ 4‚ô• 7‚ô¶]
	//   Player 4: [5‚ô£ 5‚ô• T‚ô¶ 2‚ô¶] Pair, Tens, kickers Jack, Nine, Five [T‚ô¶ T‚ô• J‚ô£ 9‚ô¶ 5‚ô£] [5‚ô• 2‚ô¶ 4‚ô• 7‚ô¶]
	//   Player 5: [7‚ô† 3‚ô• 6‚ô† A‚ô£] Pair, Sevens, kickers Ace, Jack, Ten [7‚ô¶ 7‚ô† A‚ô£ J‚ô£ T‚ô•] [3‚ô• 6‚ô† 4‚ô• 9‚ô¶]
	//   Player 6: [4‚ô† 8‚ô¶ K‚ô¶ T‚ô£] Straight, Jack-high [J‚ô£ T‚ô£ 9‚ô¶ 8‚ô¶ 7‚ô¶] [4‚ô† K‚ô¶ T‚ô• 4‚ô•]
	// Result 1:   Player 1 wins with Straight, King-high [K‚ô† Q‚ô† J‚ô£ T‚ô• 9‚ô¶]
	// Board 2:    [K‚ô£ 7‚ô£ Q‚ô£ 5‚ô† 2‚ô•]
	//   Player 1: [K‚ô† Q‚ô† 4‚ô£ J‚ô¶] Two Pair, Kings over Queens, kicker Seven [K‚ô£ K‚ô† Q‚ô£ Q‚ô† 7‚ô£] [4‚ô£ J‚ô¶ 5‚ô† 2‚ô•]
	//   Player 2: [J‚ô† 3‚ô£ 8‚ô• 2‚ô†] Pair, Twos, kickers King, Queen, Jack [2‚ô• 2‚ô† K‚ô£ Q‚ô£ J‚ô†] [3‚ô£ 8‚ô• 7‚ô£ 5‚ô†]
	//   Player 3: [3‚ô† T‚ô† 2‚ô£ Q‚ô¶] Two Pair, Queens over Twos, kicker King [Q‚ô£ Q‚ô¶ 2‚ô£ 2‚ô• K‚ô£] [3‚ô† T‚ô† 7‚ô£ 5‚ô†]
	//   Player 4: [5‚ô£ 5‚ô• T‚ô¶ 2‚ô¶] Three of a Kind, Fives, kickers King, Queen [5‚ô£ 5‚ô• 5‚ô† K‚ô£ Q‚ô£] [T‚ô¶ 2‚ô¶ 7‚ô£ 2‚ô•]
	//   Player 5: [7‚ô† 3‚ô• 6‚ô† A‚ô£] Pair, Sevens, kickers Ace, King, Queen [7‚ô£ 7‚ô† A‚ô£ K‚ô£ Q‚ô£] [3‚ô• 6‚ô† 5‚ô† 2‚ô•]
	//   Player 6: [4‚ô† 8‚ô¶ K‚ô¶ T‚ô£] Pair, Kings, kickers Queen, Ten, Seven [K‚ô£ K‚ô¶ Q‚ô£ T‚ô£ 7‚ô£] [4‚ô† 8‚ô¶ 5‚ô† 2‚ô•]
	// Result 2:   Player 4 wins with Three of a Kind, Fives, kickers King, Queen [5‚ô£ 5‚ô• 5‚ô† K‚ô£ Q‚ô£]
	// ------ Omaha MultiBoard 4 ------
	// Board 1:    [2‚ô¶ 6‚ô¶ 6‚ô£ K‚ô¶ 3‚ô†]
	//   Player 1: [6‚ô† K‚ô• A‚ô£ 8‚ô£] Full House, Sixes full of Kings [6‚ô£ 6‚ô¶ 6‚ô† K‚ô¶ K‚ô•] [A‚ô£ 8‚ô£ 2‚ô¶ 3‚ô†]
	//   Player 2: [Q‚ô• 4‚ô• J‚ô£ 5‚ô•] Straight, Six-high [6‚ô¶ 5‚ô• 4‚ô• 3‚ô† 2‚ô¶] [Q‚ô• J‚ô£ 6‚ô£ K‚ô¶]
	//   Player 3: [2‚ô£ 6‚ô• 5‚ô£ Q‚ô†] Full House, Sixes full of Twos [6‚ô£ 6‚ô¶ 6‚ô• 2‚ô£ 2‚ô¶] [5‚ô£ Q‚ô† K‚ô¶ 3‚ô†]
	//   Player 4: [9‚ô† J‚ô• K‚ô† J‚ô†] Two Pair, Kings over Sixes, kicker Jack [K‚ô¶ K‚ô† 6‚ô£ 6‚ô¶ J‚ô•] [9‚ô† J‚ô† 2‚ô¶ 3‚ô†]
	//   Player 5: [3‚ô¶ 4‚ô¶ K‚ô£ 8‚ô¶] Flush, King-high [K‚ô¶ 8‚ô¶ 6‚ô¶ 4‚ô¶ 2‚ô¶] [3‚ô¶ K‚ô£ 6‚ô£ 3‚ô†]
	//   Player 6: [T‚ô£ Q‚ô¶ A‚ô† 7‚ô•] Pair, Sixes, kickers Ace, King, Queen [6‚ô£ 6‚ô¶ A‚ô† K‚ô¶ Q‚ô¶] [T‚ô£ 7‚ô• 2‚ô¶ 3‚ô†]
	// Result 1:   Player 1 wins with Full House, Sixes full of Kings [6‚ô£ 6‚ô¶ 6‚ô† K‚ô¶ K‚ô•]
	// Board 2:    [Q‚ô£ 5‚ô¶ 7‚ô£ 7‚ô¶ T‚ô†]
	//   Player 1: [6‚ô† K‚ô• A‚ô£ 8‚ô£] Pair, Sevens, kickers Ace, King, Queen [7‚ô£ 7‚ô¶ A‚ô£ K‚ô• Q‚ô£] [6‚ô† 8‚ô£ 5‚ô¶ T‚ô†]
	//   Player 2: [Q‚ô• 4‚ô• J‚ô£ 5‚ô•] Two Pair, Queens over Sevens, kicker Jack [Q‚ô£ Q‚ô• 7‚ô£ 7‚ô¶ J‚ô£] [4‚ô• 5‚ô• 5‚ô¶ T‚ô†]
	//   Player 3: [2‚ô£ 6‚ô• 5‚ô£ Q‚ô†] Two Pair, Queens over Sevens, kicker Six [Q‚ô£ Q‚ô† 7‚ô£ 7‚ô¶ 6‚ô•] [2‚ô£ 5‚ô£ 5‚ô¶ T‚ô†]
	//   Player 4: [9‚ô† J‚ô• K‚ô† J‚ô†] Two Pair, Jacks over Sevens, kicker Queen [J‚ô• J‚ô† 7‚ô£ 7‚ô¶ Q‚ô£] [9‚ô† K‚ô† 5‚ô¶ T‚ô†]
	//   Player 5: [3‚ô¶ 4‚ô¶ K‚ô£ 8‚ô¶] Pair, Sevens, kickers King, Queen, Eight [7‚ô£ 7‚ô¶ K‚ô£ Q‚ô£ 8‚ô¶] [3‚ô¶ 4‚ô¶ 5‚ô¶ T‚ô†]
	//   Player 6: [T‚ô£ Q‚ô¶ A‚ô† 7‚ô•] Full House, Sevens full of Queens [7‚ô£ 7‚ô¶ 7‚ô• Q‚ô£ Q‚ô¶] [T‚ô£ A‚ô† 5‚ô¶ T‚ô†]
	// Result 2:   Player 6 wins with Full House, Sevens full of Queens [7‚ô£ 7‚ô¶ 7‚ô• Q‚ô£ Q‚ô¶]
	// ------ Omaha MultiBoard 5 ------
	// Board 1:    [4‚ô£ K‚ô£ 6‚ô¶ 6‚ô• 2‚ô¶]
	//   Player 1: [3‚ô¶ 4‚ô¶ 5‚ô¶ J‚ô£] Straight, Six-high [6‚ô¶ 5‚ô¶ 4‚ô£ 3‚ô¶ 2‚ô¶] [4‚ô¶ J‚ô£ K‚ô£ 6‚ô•]
	//   Player 2: [T‚ô• J‚ô† K‚ô† 2‚ô£] Two Pair, Kings over Sixes, kicker Jack [K‚ô£ K‚ô† 6‚ô¶ 6‚ô• J‚ô†] [T‚ô• 2‚ô£ 4‚ô£ 2‚ô¶]
	//   Player 3: [A‚ô£ 9‚ô† T‚ô† 3‚ô†] Pair, Sixes, kickers Ace, King, Ten [6‚ô¶ 6‚ô• A‚ô£ K‚ô£ T‚ô†] [9‚ô† 3‚ô† 4‚ô£ 2‚ô¶]
	//   Player 4: [7‚ô¶ 3‚ô£ 8‚ô† 7‚ô£] Two Pair, Sevens over Sixes, kicker King [7‚ô£ 7‚ô¶ 6‚ô¶ 6‚ô• K‚ô£] [3‚ô£ 8‚ô† 4‚ô£ 2‚ô¶]
	//   Player 5: [5‚ô£ Q‚ô† J‚ô• 2‚ô†] Two Pair, Sixes over Twos, kicker Queen [6‚ô¶ 6‚ô• 2‚ô¶ 2‚ô† Q‚ô†] [5‚ô£ J‚ô• 4‚ô£ K‚ô£]
	//   Player 6: [6‚ô† 7‚ô† 7‚ô• 2‚ô•] Full House, Sixes full of Twos [6‚ô¶ 6‚ô• 6‚ô† 2‚ô¶ 2‚ô•] [7‚ô† 7‚ô• 4‚ô£ K‚ô£]
	// Result 1:   Player 6 wins with Full House, Sixes full of Twos [6‚ô¶ 6‚ô• 6‚ô† 2‚ô¶ 2‚ô•]
	// Board 2:    [9‚ô¶ K‚ô• 5‚ô† K‚ô¶ 6‚ô£]
	//   Player 1: [3‚ô¶ 4‚ô¶ 5‚ô¶ J‚ô£] Two Pair, Kings over Fives, kicker Jack [K‚ô¶ K‚ô• 5‚ô¶ 5‚ô† J‚ô£] [3‚ô¶ 4‚ô¶ 9‚ô¶ 6‚ô£]
	//   Player 2: [T‚ô• J‚ô† K‚ô† 2‚ô£] Three of a Kind, Kings, kickers Jack, Nine [K‚ô¶ K‚ô• K‚ô† J‚ô† 9‚ô¶] [T‚ô• 2‚ô£ 5‚ô† 6‚ô£]
	//   Player 3: [A‚ô£ 9‚ô† T‚ô† 3‚ô†] Two Pair, Kings over Nines, kicker Ace [K‚ô¶ K‚ô• 9‚ô¶ 9‚ô† A‚ô£] [T‚ô† 3‚ô† 5‚ô† 6‚ô£]
	//   Player 4: [7‚ô¶ 3‚ô£ 8‚ô† 7‚ô£] Straight, Nine-high [9‚ô¶ 8‚ô† 7‚ô¶ 6‚ô£ 5‚ô†] [3‚ô£ 7‚ô£ K‚ô• K‚ô¶]
	//   Player 5: [5‚ô£ Q‚ô† J‚ô• 2‚ô†] Two Pair, Kings over Fives, kicker Queen [K‚ô¶ K‚ô• 5‚ô£ 5‚ô† Q‚ô†] [J‚ô• 2‚ô† 9‚ô¶ 6‚ô£]
	//   Player 6: [6‚ô† 7‚ô† 7‚ô• 2‚ô•] Two Pair, Kings over Sevens, kicker Nine [K‚ô¶ K‚ô• 7‚ô• 7‚ô† 9‚ô¶] [6‚ô† 2‚ô• 5‚ô† 6‚ô£]
	// Result 2:   Player 4 wins with Straight, Nine-high [9‚ô¶ 8‚ô† 7‚ô¶ 6‚ô£ 5‚ô†]
}

func Example_stud() {
	for i, game := range []struct {
		seed    int64
		players int
	}{
		{119, 2},
		{321, 5},
		{408, 6},
		{455, 6},
		{1113, 6},
	} {
		// note: use a real random source
		rnd := rand.New(rand.NewSource(game.seed))
		pockets, _ := cardrank.Stud.Deal(rnd, game.players)
		hands := cardrank.Stud.RankHands(pockets, nil)
		fmt.Printf("------ Stud %d ------\n", i+1)
		for j := 0; j < game.players; j++ {
			fmt.Printf("Player %d: %b %s %b %b\n", j+1, hands[j].Pocket, hands[j].Description(), hands[j].HiBest, hands[j].HiUnused)
		}
		h, pivot := cardrank.HiOrder(hands)
		if pivot == 1 {
			fmt.Printf("Result:   Player %d wins with %s %b\n", h[0]+1, hands[h[0]].Description(), hands[h[0]].HiBest)
		} else {
			var s, b []string
			for j := 0; j < pivot; j++ {
				s = append(s, strconv.Itoa(h[j]+1))
				b = append(b, fmt.Sprintf("%b", hands[h[j]].HiBest))
			}
			fmt.Printf("Result:   Players %s push with %s %s\n", strings.Join(s, ", "), hands[h[0]].Description(), strings.Join(b, ", "))
		}
	}
	// Output:
	// ------ Stud 1 ------
	// Player 1: [K‚ô• J‚ô£ A‚ô• Q‚ô† 6‚ô£ 5‚ô• Q‚ô¶] Pair, Queens, kickers Ace, King, Jack [Q‚ô¶ Q‚ô† A‚ô• K‚ô• J‚ô£] [6‚ô£ 5‚ô•]
	// Player 2: [7‚ô£ 4‚ô£ 5‚ô† 2‚ô† 3‚ô• 4‚ô• 7‚ô•] Two Pair, Sevens over Fours, kicker Five [7‚ô£ 7‚ô• 4‚ô£ 4‚ô• 5‚ô†] [3‚ô• 2‚ô†]
	// Result:   Player 2 wins with Two Pair, Sevens over Fours, kicker Five [7‚ô£ 7‚ô• 4‚ô£ 4‚ô• 5‚ô†]
	// ------ Stud 2 ------
	// Player 1: [3‚ô† 3‚ô¶ T‚ô† Q‚ô† T‚ô• 9‚ô† K‚ô•] Two Pair, Tens over Threes, kicker King [T‚ô• T‚ô† 3‚ô¶ 3‚ô† K‚ô•] [Q‚ô† 9‚ô†]
	// Player 2: [6‚ô¶ Q‚ô£ 8‚ô• 6‚ô£ 3‚ô• T‚ô£ 7‚ô•] Pair, Sixes, kickers Queen, Ten, Eight [6‚ô£ 6‚ô¶ Q‚ô£ T‚ô£ 8‚ô•] [7‚ô• 3‚ô•]
	// Player 3: [Q‚ô¶ K‚ô† 8‚ô£ A‚ô• 7‚ô£ 9‚ô£ 2‚ô£] Nothing, Ace-high, kickers King, Queen, Nine, Eight [A‚ô• K‚ô† Q‚ô¶ 9‚ô£ 8‚ô£] [7‚ô£ 2‚ô£]
	// Player 4: [K‚ô¶ T‚ô¶ 8‚ô¶ 4‚ô• 3‚ô£ J‚ô† 2‚ô¶] Nothing, King-high, kickers Jack, Ten, Eight, Four [K‚ô¶ J‚ô† T‚ô¶ 8‚ô¶ 4‚ô•] [3‚ô£ 2‚ô¶]
	// Player 5: [J‚ô¶ 2‚ô• Q‚ô• 6‚ô† 5‚ô¶ 7‚ô† A‚ô¶] Nothing, Ace-high, kickers Queen, Jack, Seven, Six [A‚ô¶ Q‚ô• J‚ô¶ 7‚ô† 6‚ô†] [5‚ô¶ 2‚ô•]
	// Result:   Player 1 wins with Two Pair, Tens over Threes, kicker King [T‚ô• T‚ô† 3‚ô¶ 3‚ô† K‚ô•]
	// ------ Stud 3 ------
	// Player 1: [K‚ô† Q‚ô† 4‚ô£ J‚ô¶ 7‚ô• 7‚ô£ J‚ô•] Two Pair, Jacks over Sevens, kicker King [J‚ô¶ J‚ô• 7‚ô£ 7‚ô• K‚ô†] [Q‚ô† 4‚ô£]
	// Player 2: [J‚ô† 3‚ô£ 8‚ô• 2‚ô† J‚ô£ Q‚ô£ 7‚ô¶] Pair, Jacks, kickers Queen, Eight, Seven [J‚ô£ J‚ô† Q‚ô£ 8‚ô• 7‚ô¶] [3‚ô£ 2‚ô†]
	// Player 3: [3‚ô† T‚ô† 2‚ô£ Q‚ô¶ T‚ô• K‚ô• 3‚ô¶] Two Pair, Tens over Threes, kicker King [T‚ô• T‚ô† 3‚ô¶ 3‚ô† K‚ô•] [Q‚ô¶ 2‚ô£]
	// Player 4: [5‚ô£ 5‚ô• T‚ô¶ 2‚ô¶ 4‚ô• 9‚ô¶ 2‚ô•] Two Pair, Fives over Twos, kicker Ten [5‚ô£ 5‚ô• 2‚ô¶ 2‚ô• T‚ô¶] [9‚ô¶ 4‚ô•]
	// Player 5: [7‚ô† 3‚ô• 6‚ô† A‚ô£ 8‚ô† 6‚ô¶ A‚ô¶] Two Pair, Aces over Sixes, kicker Eight [A‚ô£ A‚ô¶ 6‚ô¶ 6‚ô† 8‚ô†] [7‚ô† 3‚ô•]
	// Player 6: [4‚ô† 8‚ô¶ K‚ô¶ T‚ô£ K‚ô£ 5‚ô† 9‚ô£] Pair, Kings, kickers Ten, Nine, Eight [K‚ô£ K‚ô¶ T‚ô£ 9‚ô£ 8‚ô¶] [5‚ô† 4‚ô†]
	// Result:   Player 5 wins with Two Pair, Aces over Sixes, kicker Eight [A‚ô£ A‚ô¶ 6‚ô¶ 6‚ô† 8‚ô†]
	// ------ Stud 4 ------
	// Player 1: [6‚ô† K‚ô• A‚ô£ 8‚ô£ 2‚ô† 5‚ô¶ A‚ô•] Pair, Aces, kickers King, Eight, Six [A‚ô£ A‚ô• K‚ô• 8‚ô£ 6‚ô†] [5‚ô¶ 2‚ô†]
	// Player 2: [Q‚ô• 4‚ô• J‚ô£ 5‚ô• 2‚ô¶ 7‚ô£ 3‚ô†] Nothing, Queen-high, kickers Jack, Seven, Five, Four [Q‚ô• J‚ô£ 7‚ô£ 5‚ô• 4‚ô•] [3‚ô† 2‚ô¶]
	// Player 3: [2‚ô£ 6‚ô• 5‚ô£ Q‚ô† 6‚ô¶ 9‚ô• 3‚ô£] Pair, Sixes, kickers Queen, Nine, Five [6‚ô¶ 6‚ô• Q‚ô† 9‚ô• 5‚ô£] [3‚ô£ 2‚ô£]
	// Player 4: [9‚ô† J‚ô• K‚ô† J‚ô† 6‚ô£ K‚ô¶ T‚ô†] Two Pair, Kings over Jacks, kicker Ten [K‚ô¶ K‚ô† J‚ô• J‚ô† T‚ô†] [9‚ô† 6‚ô£]
	// Player 5: [3‚ô¶ 4‚ô¶ K‚ô£ 8‚ô¶ 8‚ô• 9‚ô£ T‚ô•] Pair, Eights, kickers King, Ten, Nine [8‚ô¶ 8‚ô• K‚ô£ T‚ô• 9‚ô£] [4‚ô¶ 3‚ô¶]
	// Player 6: [T‚ô£ Q‚ô¶ A‚ô† 7‚ô• Q‚ô£ 7‚ô¶ 2‚ô•] Two Pair, Queens over Sevens, kicker Ace [Q‚ô£ Q‚ô¶ 7‚ô¶ 7‚ô• A‚ô†] [T‚ô£ 2‚ô•]
	// Result:   Player 4 wins with Two Pair, Kings over Jacks, kicker Ten [K‚ô¶ K‚ô† J‚ô• J‚ô† T‚ô†]
	// ------ Stud 5 ------
	// Player 1: [3‚ô¶ 4‚ô¶ 5‚ô¶ J‚ô£ 4‚ô• K‚ô• 8‚ô£] Pair, Fours, kickers King, Jack, Eight [4‚ô¶ 4‚ô• K‚ô• J‚ô£ 8‚ô£] [5‚ô¶ 3‚ô¶]
	// Player 2: [T‚ô• J‚ô† K‚ô† 2‚ô£ 4‚ô£ 5‚ô† 2‚ô¶] Pair, Twos, kickers King, Jack, Ten [2‚ô£ 2‚ô¶ K‚ô† J‚ô† T‚ô•] [5‚ô† 4‚ô£]
	// Player 3: [A‚ô£ 9‚ô† T‚ô† 3‚ô† K‚ô£ 8‚ô¶ A‚ô•] Pair, Aces, kickers King, Ten, Nine [A‚ô£ A‚ô• K‚ô£ T‚ô† 9‚ô†] [8‚ô¶ 3‚ô†]
	// Player 4: [7‚ô¶ 3‚ô£ 8‚ô† 7‚ô£ 6‚ô¶ 6‚ô• 6‚ô£] Full House, Sixes full of Sevens [6‚ô£ 6‚ô¶ 6‚ô• 7‚ô£ 7‚ô¶] [8‚ô† 3‚ô£]
	// Player 5: [5‚ô£ Q‚ô† J‚ô• 2‚ô† A‚ô† 8‚ô• 4‚ô†] Nothing, Ace-high, kickers Queen, Jack, Eight, Five [A‚ô† Q‚ô† J‚ô• 8‚ô• 5‚ô£] [4‚ô† 2‚ô†]
	// Player 6: [6‚ô† 7‚ô† 7‚ô• 2‚ô• 9‚ô¶ K‚ô¶ T‚ô¶] Pair, Sevens, kickers King, Ten, Nine [7‚ô• 7‚ô† K‚ô¶ T‚ô¶ 9‚ô¶] [6‚ô† 2‚ô•]
	// Result:   Player 4 wins with Full House, Sixes full of Sevens [6‚ô£ 6‚ô¶ 6‚ô• 7‚ô£ 7‚ô¶]
}

func Example_studHiLo() {
	for i, game := range []struct {
		seed    int64
		players int
	}{
		{119, 2},
		{321, 5},
		{408, 6},
		{455, 6},
		{1113, 6},
	} {
		// note: use a real random source
		rnd := rand.New(rand.NewSource(game.seed))
		pockets, _ := cardrank.StudHiLo.Deal(rnd, game.players)
		hands := cardrank.StudHiLo.RankHands(pockets, nil)
		fmt.Printf("------ StudHiLo %d ------\n", i+1)
		for j := 0; j < game.players; j++ {
			fmt.Printf("Player %d: %b\n", j+1, pockets[j])
			fmt.Printf("  Hi: %s %b %b\n", hands[j].Description(), hands[j].HiBest, hands[j].HiUnused)
			fmt.Printf("  Lo: %s %b %b\n", hands[j].LowDescription(), hands[j].LoBest, hands[j].LoUnused)
		}
		h, hPivot := cardrank.HiOrder(hands)
		l, lPivot := cardrank.LoOrder(hands)
		typ := "wins"
		if lPivot == 0 {
			typ = "scoops"
		}
		if hPivot == 1 {
			fmt.Printf("Result (Hi): Player %d %s with %s %b\n", h[0]+1, typ, hands[h[0]].Description(), hands[h[0]].HiBest)
		} else {
			var s, b []string
			for j := 0; j < hPivot; j++ {
				s = append(s, strconv.Itoa(h[j]+1))
				b = append(b, fmt.Sprintf("%b", hands[h[j]].HiBest))
			}
			fmt.Printf("Result (Hi): Players %s push with %s %s\n", strings.Join(s, ", "), hands[h[0]].Description(), strings.Join(b, ", "))
		}
		if lPivot == 1 {
			fmt.Printf("Result (Lo): Player %d wins with %s %b\n", l[0]+1, hands[l[0]].LowDescription(), hands[l[0]].LoBest)
		} else if lPivot > 1 {
			var s, b []string
			for j := 0; j < lPivot; j++ {
				s = append(s, strconv.Itoa(l[j]+1))
				b = append(b, fmt.Sprintf("%b", hands[l[j]].LoBest))
			}
			fmt.Printf("Result (Lo): Players %s push with %s %s\n", strings.Join(s, ", "), hands[l[0]].LowDescription(), strings.Join(b, ", "))
		} else {
			fmt.Printf("Result (Lo): no player made a low hand\n")
		}
	}
	// Output:
	// ------ StudHiLo 1 ------
	// Player 1: [K‚ô• J‚ô£ A‚ô• Q‚ô† 6‚ô£ 5‚ô• Q‚ô¶]
	//   Hi: Pair, Queens, kickers Ace, King, Jack [Q‚ô¶ Q‚ô† A‚ô• K‚ô• J‚ô£] [6‚ô£ 5‚ô•]
	//   Lo: None [] []
	// Player 2: [7‚ô£ 4‚ô£ 5‚ô† 2‚ô† 3‚ô• 4‚ô• 7‚ô•]
	//   Hi: Two Pair, Sevens over Fours, kicker Five [7‚ô£ 7‚ô• 4‚ô£ 4‚ô• 5‚ô†] [3‚ô• 2‚ô†]
	//   Lo: Seven, Five, Four, Three, Two-low [7‚ô£ 5‚ô† 4‚ô£ 3‚ô• 2‚ô†] [4‚ô• 7‚ô•]
	// Result (Hi): Player 2 wins with Two Pair, Sevens over Fours, kicker Five [7‚ô£ 7‚ô• 4‚ô£ 4‚ô• 5‚ô†]
	// Result (Lo): Player 2 wins with Seven, Five, Four, Three, Two-low [7‚ô£ 5‚ô† 4‚ô£ 3‚ô• 2‚ô†]
	// ------ StudHiLo 2 ------
	// Player 1: [3‚ô† 3‚ô¶ T‚ô† Q‚ô† T‚ô• 9‚ô† K‚ô•]
	//   Hi: Two Pair, Tens over Threes, kicker King [T‚ô• T‚ô† 3‚ô¶ 3‚ô† K‚ô•] [Q‚ô† 9‚ô†]
	//   Lo: None [] []
	// Player 2: [6‚ô¶ Q‚ô£ 8‚ô• 6‚ô£ 3‚ô• T‚ô£ 7‚ô•]
	//   Hi: Pair, Sixes, kickers Queen, Ten, Eight [6‚ô£ 6‚ô¶ Q‚ô£ T‚ô£ 8‚ô•] [7‚ô• 3‚ô•]
	//   Lo: None [] []
	// Player 3: [Q‚ô¶ K‚ô† 8‚ô£ A‚ô• 7‚ô£ 9‚ô£ 2‚ô£]
	//   Hi: Nothing, Ace-high, kickers King, Queen, Nine, Eight [A‚ô• K‚ô† Q‚ô¶ 9‚ô£ 8‚ô£] [7‚ô£ 2‚ô£]
	//   Lo: None [] []
	// Player 4: [K‚ô¶ T‚ô¶ 8‚ô¶ 4‚ô• 3‚ô£ J‚ô† 2‚ô¶]
	//   Hi: Nothing, King-high, kickers Jack, Ten, Eight, Four [K‚ô¶ J‚ô† T‚ô¶ 8‚ô¶ 4‚ô•] [3‚ô£ 2‚ô¶]
	//   Lo: None [] []
	// Player 5: [J‚ô¶ 2‚ô• Q‚ô• 6‚ô† 5‚ô¶ 7‚ô† A‚ô¶]
	//   Hi: Nothing, Ace-high, kickers Queen, Jack, Seven, Six [A‚ô¶ Q‚ô• J‚ô¶ 7‚ô† 6‚ô†] [5‚ô¶ 2‚ô•]
	//   Lo: Seven, Six, Five, Two, Ace-low [7‚ô† 6‚ô† 5‚ô¶ 2‚ô• A‚ô¶] [J‚ô¶ Q‚ô•]
	// Result (Hi): Player 1 wins with Two Pair, Tens over Threes, kicker King [T‚ô• T‚ô† 3‚ô¶ 3‚ô† K‚ô•]
	// Result (Lo): Player 5 wins with Seven, Six, Five, Two, Ace-low [7‚ô† 6‚ô† 5‚ô¶ 2‚ô• A‚ô¶]
	// ------ StudHiLo 3 ------
	// Player 1: [K‚ô† Q‚ô† 4‚ô£ J‚ô¶ 7‚ô• 7‚ô£ J‚ô•]
	//   Hi: Two Pair, Jacks over Sevens, kicker King [J‚ô¶ J‚ô• 7‚ô£ 7‚ô• K‚ô†] [Q‚ô† 4‚ô£]
	//   Lo: None [] []
	// Player 2: [J‚ô† 3‚ô£ 8‚ô• 2‚ô† J‚ô£ Q‚ô£ 7‚ô¶]
	//   Hi: Pair, Jacks, kickers Queen, Eight, Seven [J‚ô£ J‚ô† Q‚ô£ 8‚ô• 7‚ô¶] [3‚ô£ 2‚ô†]
	//   Lo: None [] []
	// Player 3: [3‚ô† T‚ô† 2‚ô£ Q‚ô¶ T‚ô• K‚ô• 3‚ô¶]
	//   Hi: Two Pair, Tens over Threes, kicker King [T‚ô• T‚ô† 3‚ô¶ 3‚ô† K‚ô•] [Q‚ô¶ 2‚ô£]
	//   Lo: None [] []
	// Player 4: [5‚ô£ 5‚ô• T‚ô¶ 2‚ô¶ 4‚ô• 9‚ô¶ 2‚ô•]
	//   Hi: Two Pair, Fives over Twos, kicker Ten [5‚ô£ 5‚ô• 2‚ô¶ 2‚ô• T‚ô¶] [9‚ô¶ 4‚ô•]
	//   Lo: None [] []
	// Player 5: [7‚ô† 3‚ô• 6‚ô† A‚ô£ 8‚ô† 6‚ô¶ A‚ô¶]
	//   Hi: Two Pair, Aces over Sixes, kicker Eight [A‚ô£ A‚ô¶ 6‚ô¶ 6‚ô† 8‚ô†] [7‚ô† 3‚ô•]
	//   Lo: Eight, Seven, Six, Three, Ace-low [8‚ô† 7‚ô† 6‚ô† 3‚ô• A‚ô£] [6‚ô¶ A‚ô¶]
	// Player 6: [4‚ô† 8‚ô¶ K‚ô¶ T‚ô£ K‚ô£ 5‚ô† 9‚ô£]
	//   Hi: Pair, Kings, kickers Ten, Nine, Eight [K‚ô£ K‚ô¶ T‚ô£ 9‚ô£ 8‚ô¶] [5‚ô† 4‚ô†]
	//   Lo: None [] []
	// Result (Hi): Player 5 wins with Two Pair, Aces over Sixes, kicker Eight [A‚ô£ A‚ô¶ 6‚ô¶ 6‚ô† 8‚ô†]
	// Result (Lo): Player 5 wins with Eight, Seven, Six, Three, Ace-low [8‚ô† 7‚ô† 6‚ô† 3‚ô• A‚ô£]
	// ------ StudHiLo 4 ------
	// Player 1: [6‚ô† K‚ô• A‚ô£ 8‚ô£ 2‚ô† 5‚ô¶ A‚ô•]
	//   Hi: Pair, Aces, kickers King, Eight, Six [A‚ô£ A‚ô• K‚ô• 8‚ô£ 6‚ô†] [5‚ô¶ 2‚ô†]
	//   Lo: Eight, Six, Five, Two, Ace-low [8‚ô£ 6‚ô† 5‚ô¶ 2‚ô† A‚ô£] [K‚ô• A‚ô•]
	// Player 2: [Q‚ô• 4‚ô• J‚ô£ 5‚ô• 2‚ô¶ 7‚ô£ 3‚ô†]
	//   Hi: Nothing, Queen-high, kickers Jack, Seven, Five, Four [Q‚ô• J‚ô£ 7‚ô£ 5‚ô• 4‚ô•] [3‚ô† 2‚ô¶]
	//   Lo: Seven, Five, Four, Three, Two-low [7‚ô£ 5‚ô• 4‚ô• 3‚ô† 2‚ô¶] [Q‚ô• J‚ô£]
	// Player 3: [2‚ô£ 6‚ô• 5‚ô£ Q‚ô† 6‚ô¶ 9‚ô• 3‚ô£]
	//   Hi: Pair, Sixes, kickers Queen, Nine, Five [6‚ô¶ 6‚ô• Q‚ô† 9‚ô• 5‚ô£] [3‚ô£ 2‚ô£]
	//   Lo: None [] []
	// Player 4: [9‚ô† J‚ô• K‚ô† J‚ô† 6‚ô£ K‚ô¶ T‚ô†]
	//   Hi: Two Pair, Kings over Jacks, kicker Ten [K‚ô¶ K‚ô† J‚ô• J‚ô† T‚ô†] [9‚ô† 6‚ô£]
	//   Lo: None [] []
	// Player 5: [3‚ô¶ 4‚ô¶ K‚ô£ 8‚ô¶ 8‚ô• 9‚ô£ T‚ô•]
	//   Hi: Pair, Eights, kickers King, Ten, Nine [8‚ô¶ 8‚ô• K‚ô£ T‚ô• 9‚ô£] [4‚ô¶ 3‚ô¶]
	//   Lo: None [] []
	// Player 6: [T‚ô£ Q‚ô¶ A‚ô† 7‚ô• Q‚ô£ 7‚ô¶ 2‚ô•]
	//   Hi: Two Pair, Queens over Sevens, kicker Ace [Q‚ô£ Q‚ô¶ 7‚ô¶ 7‚ô• A‚ô†] [T‚ô£ 2‚ô•]
	//   Lo: None [] []
	// Result (Hi): Player 4 wins with Two Pair, Kings over Jacks, kicker Ten [K‚ô¶ K‚ô† J‚ô• J‚ô† T‚ô†]
	// Result (Lo): Player 2 wins with Seven, Five, Four, Three, Two-low [7‚ô£ 5‚ô• 4‚ô• 3‚ô† 2‚ô¶]
	// ------ StudHiLo 5 ------
	// Player 1: [3‚ô¶ 4‚ô¶ 5‚ô¶ J‚ô£ 4‚ô• K‚ô• 8‚ô£]
	//   Hi: Pair, Fours, kickers King, Jack, Eight [4‚ô¶ 4‚ô• K‚ô• J‚ô£ 8‚ô£] [5‚ô¶ 3‚ô¶]
	//   Lo: None [] []
	// Player 2: [T‚ô• J‚ô† K‚ô† 2‚ô£ 4‚ô£ 5‚ô† 2‚ô¶]
	//   Hi: Pair, Twos, kickers King, Jack, Ten [2‚ô£ 2‚ô¶ K‚ô† J‚ô† T‚ô•] [5‚ô† 4‚ô£]
	//   Lo: None [] []
	// Player 3: [A‚ô£ 9‚ô† T‚ô† 3‚ô† K‚ô£ 8‚ô¶ A‚ô•]
	//   Hi: Pair, Aces, kickers King, Ten, Nine [A‚ô£ A‚ô• K‚ô£ T‚ô† 9‚ô†] [8‚ô¶ 3‚ô†]
	//   Lo: None [] []
	// Player 4: [7‚ô¶ 3‚ô£ 8‚ô† 7‚ô£ 6‚ô¶ 6‚ô• 6‚ô£]
	//   Hi: Full House, Sixes full of Sevens [6‚ô£ 6‚ô¶ 6‚ô• 7‚ô£ 7‚ô¶] [8‚ô† 3‚ô£]
	//   Lo: None [] []
	// Player 5: [5‚ô£ Q‚ô† J‚ô• 2‚ô† A‚ô† 8‚ô• 4‚ô†]
	//   Hi: Nothing, Ace-high, kickers Queen, Jack, Eight, Five [A‚ô† Q‚ô† J‚ô• 8‚ô• 5‚ô£] [4‚ô† 2‚ô†]
	//   Lo: Eight, Five, Four, Two, Ace-low [8‚ô• 5‚ô£ 4‚ô† 2‚ô† A‚ô†] [Q‚ô† J‚ô•]
	// Player 6: [6‚ô† 7‚ô† 7‚ô• 2‚ô• 9‚ô¶ K‚ô¶ T‚ô¶]
	//   Hi: Pair, Sevens, kickers King, Ten, Nine [7‚ô• 7‚ô† K‚ô¶ T‚ô¶ 9‚ô¶] [6‚ô† 2‚ô•]
	//   Lo: None [] []
	// Result (Hi): Player 4 wins with Full House, Sixes full of Sevens [6‚ô£ 6‚ô¶ 6‚ô• 7‚ô£ 7‚ô¶]
	// Result (Lo): Player 5 wins with Eight, Five, Four, Two, Ace-low [8‚ô• 5‚ô£ 4‚ô† 2‚ô† A‚ô†]
}

func Example_razz() {
	for i, game := range []struct {
		seed    int64
		players int
	}{
		{119, 2},
		{321, 5},
		{408, 6},
		{455, 6},
		{1113, 6},
	} {
		// note: use a real random source
		rnd := rand.New(rand.NewSource(game.seed))
		pockets, _ := cardrank.Razz.Deal(rnd, game.players)
		hands := cardrank.Razz.RankHands(pockets, nil)
		fmt.Printf("------ Razz %d ------\n", i+1)
		for j := 0; j < game.players; j++ {
			fmt.Printf("Player %d: %b %s %b %b\n", j+1, hands[j].Pocket, hands[j].Description(), hands[j].HiBest, hands[j].HiUnused)
		}
		h, pivot := cardrank.HiOrder(hands)
		if pivot == 1 {
			fmt.Printf("Result:   Player %d wins with %s %b\n", h[0]+1, hands[h[0]].Description(), hands[h[0]].HiBest)
		} else {
			var s, b []string
			for j := 0; j < pivot; j++ {
				s = append(s, strconv.Itoa(h[j]+1))
				b = append(b, fmt.Sprintf("%b", hands[h[j]].HiBest))
			}
			fmt.Printf("Result:   Players %s push with %s %s\n", strings.Join(s, ", "), hands[h[0]].Description(), strings.Join(b, ", "))
		}
	}
	// Output:
	// ------ Razz 1 ------
	// Player 1: [K‚ô• J‚ô£ A‚ô• Q‚ô† 6‚ô£ 5‚ô• Q‚ô¶] Queen, Jack, Six, Five, Ace-low [Q‚ô† J‚ô£ 6‚ô£ 5‚ô• A‚ô•] [K‚ô• Q‚ô¶]
	// Player 2: [7‚ô£ 4‚ô£ 5‚ô† 2‚ô† 3‚ô• 4‚ô• 7‚ô•] Seven, Five, Four, Three, Two-low [7‚ô£ 5‚ô† 4‚ô£ 3‚ô• 2‚ô†] [4‚ô• 7‚ô•]
	// Result:   Player 2 wins with Seven, Five, Four, Three, Two-low [7‚ô£ 5‚ô† 4‚ô£ 3‚ô• 2‚ô†]
	// ------ Razz 2 ------
	// Player 1: [3‚ô† 3‚ô¶ T‚ô† Q‚ô† T‚ô• 9‚ô† K‚ô•] King, Queen, Ten, Nine, Three-low [K‚ô• Q‚ô† T‚ô† 9‚ô† 3‚ô†] [3‚ô¶ T‚ô•]
	// Player 2: [6‚ô¶ Q‚ô£ 8‚ô• 6‚ô£ 3‚ô• T‚ô£ 7‚ô•] Ten, Eight, Seven, Six, Three-low [T‚ô£ 8‚ô• 7‚ô• 6‚ô¶ 3‚ô•] [Q‚ô£ 6‚ô£]
	// Player 3: [Q‚ô¶ K‚ô† 8‚ô£ A‚ô• 7‚ô£ 9‚ô£ 2‚ô£] Nine, Eight, Seven, Two, Ace-low [9‚ô£ 8‚ô£ 7‚ô£ 2‚ô£ A‚ô•] [Q‚ô¶ K‚ô†]
	// Player 4: [K‚ô¶ T‚ô¶ 8‚ô¶ 4‚ô• 3‚ô£ J‚ô† 2‚ô¶] Ten, Eight, Four, Three, Two-low [T‚ô¶ 8‚ô¶ 4‚ô• 3‚ô£ 2‚ô¶] [K‚ô¶ J‚ô†]
	// Player 5: [J‚ô¶ 2‚ô• Q‚ô• 6‚ô† 5‚ô¶ 7‚ô† A‚ô¶] Seven, Six, Five, Two, Ace-low [7‚ô† 6‚ô† 5‚ô¶ 2‚ô• A‚ô¶] [J‚ô¶ Q‚ô•]
	// Result:   Player 5 wins with Seven, Six, Five, Two, Ace-low [7‚ô† 6‚ô† 5‚ô¶ 2‚ô• A‚ô¶]
	// ------ Razz 3 ------
	// Player 1: [K‚ô† Q‚ô† 4‚ô£ J‚ô¶ 7‚ô• 7‚ô£ J‚ô•] King, Queen, Jack, Seven, Four-low [K‚ô† Q‚ô† J‚ô¶ 7‚ô• 4‚ô£] [7‚ô£ J‚ô•]
	// Player 2: [J‚ô† 3‚ô£ 8‚ô• 2‚ô† J‚ô£ Q‚ô£ 7‚ô¶] Jack, Eight, Seven, Three, Two-low [J‚ô† 8‚ô• 7‚ô¶ 3‚ô£ 2‚ô†] [J‚ô£ Q‚ô£]
	// Player 3: [3‚ô† T‚ô† 2‚ô£ Q‚ô¶ T‚ô• K‚ô• 3‚ô¶] King, Queen, Ten, Three, Two-low [K‚ô• Q‚ô¶ T‚ô† 3‚ô† 2‚ô£] [T‚ô• 3‚ô¶]
	// Player 4: [5‚ô£ 5‚ô• T‚ô¶ 2‚ô¶ 4‚ô• 9‚ô¶ 2‚ô•] Ten, Nine, Five, Four, Two-low [T‚ô¶ 9‚ô¶ 5‚ô£ 4‚ô• 2‚ô¶] [5‚ô• 2‚ô•]
	// Player 5: [7‚ô† 3‚ô• 6‚ô† A‚ô£ 8‚ô† 6‚ô¶ A‚ô¶] Eight, Seven, Six, Three, Ace-low [8‚ô† 7‚ô† 6‚ô† 3‚ô• A‚ô£] [6‚ô¶ A‚ô¶]
	// Player 6: [4‚ô† 8‚ô¶ K‚ô¶ T‚ô£ K‚ô£ 5‚ô† 9‚ô£] Ten, Nine, Eight, Five, Four-low [T‚ô£ 9‚ô£ 8‚ô¶ 5‚ô† 4‚ô†] [K‚ô¶ K‚ô£]
	// Result:   Player 5 wins with Eight, Seven, Six, Three, Ace-low [8‚ô† 7‚ô† 6‚ô† 3‚ô• A‚ô£]
	// ------ Razz 4 ------
	// Player 1: [6‚ô† K‚ô• A‚ô£ 8‚ô£ 2‚ô† 5‚ô¶ A‚ô•] Eight, Six, Five, Two, Ace-low [8‚ô£ 6‚ô† 5‚ô¶ 2‚ô† A‚ô£] [K‚ô• A‚ô•]
	// Player 2: [Q‚ô• 4‚ô• J‚ô£ 5‚ô• 2‚ô¶ 7‚ô£ 3‚ô†] Seven, Five, Four, Three, Two-low [7‚ô£ 5‚ô• 4‚ô• 3‚ô† 2‚ô¶] [Q‚ô• J‚ô£]
	// Player 3: [2‚ô£ 6‚ô• 5‚ô£ Q‚ô† 6‚ô¶ 9‚ô• 3‚ô£] Nine, Six, Five, Three, Two-low [9‚ô• 6‚ô• 5‚ô£ 3‚ô£ 2‚ô£] [Q‚ô† 6‚ô¶]
	// Player 4: [9‚ô† J‚ô• K‚ô† J‚ô† 6‚ô£ K‚ô¶ T‚ô†] King, Jack, Ten, Nine, Six-low [K‚ô† J‚ô• T‚ô† 9‚ô† 6‚ô£] [J‚ô† K‚ô¶]
	// Player 5: [3‚ô¶ 4‚ô¶ K‚ô£ 8‚ô¶ 8‚ô• 9‚ô£ T‚ô•] Ten, Nine, Eight, Four, Three-low [T‚ô• 9‚ô£ 8‚ô¶ 4‚ô¶ 3‚ô¶] [K‚ô£ 8‚ô•]
	// Player 6: [T‚ô£ Q‚ô¶ A‚ô† 7‚ô• Q‚ô£ 7‚ô¶ 2‚ô•] Queen, Ten, Seven, Two, Ace-low [Q‚ô¶ T‚ô£ 7‚ô• 2‚ô• A‚ô†] [Q‚ô£ 7‚ô¶]
	// Result:   Player 2 wins with Seven, Five, Four, Three, Two-low [7‚ô£ 5‚ô• 4‚ô• 3‚ô† 2‚ô¶]
	// ------ Razz 5 ------
	// Player 1: [3‚ô¶ 4‚ô¶ 5‚ô¶ J‚ô£ 4‚ô• K‚ô• 8‚ô£] Jack, Eight, Five, Four, Three-low [J‚ô£ 8‚ô£ 5‚ô¶ 4‚ô¶ 3‚ô¶] [4‚ô• K‚ô•]
	// Player 2: [T‚ô• J‚ô† K‚ô† 2‚ô£ 4‚ô£ 5‚ô† 2‚ô¶] Jack, Ten, Five, Four, Two-low [J‚ô† T‚ô• 5‚ô† 4‚ô£ 2‚ô£] [K‚ô† 2‚ô¶]
	// Player 3: [A‚ô£ 9‚ô† T‚ô† 3‚ô† K‚ô£ 8‚ô¶ A‚ô•] Ten, Nine, Eight, Three, Ace-low [T‚ô† 9‚ô† 8‚ô¶ 3‚ô† A‚ô£] [K‚ô£ A‚ô•]
	// Player 4: [7‚ô¶ 3‚ô£ 8‚ô† 7‚ô£ 6‚ô¶ 6‚ô• 6‚ô£] Pair, Sixes, kickers Eight, Seven, Three [6‚ô¶ 6‚ô• 8‚ô† 7‚ô¶ 3‚ô£] [7‚ô£ 6‚ô£]
	// Player 5: [5‚ô£ Q‚ô† J‚ô• 2‚ô† A‚ô† 8‚ô• 4‚ô†] Eight, Five, Four, Two, Ace-low [8‚ô• 5‚ô£ 4‚ô† 2‚ô† A‚ô†] [Q‚ô† J‚ô•]
	// Player 6: [6‚ô† 7‚ô† 7‚ô• 2‚ô• 9‚ô¶ K‚ô¶ T‚ô¶] Ten, Nine, Seven, Six, Two-low [T‚ô¶ 9‚ô¶ 7‚ô† 6‚ô† 2‚ô•] [7‚ô• K‚ô¶]
	// Result:   Player 5 wins with Eight, Five, Four, Two, Ace-low [8‚ô• 5‚ô£ 4‚ô† 2‚ô† A‚ô†]
}

func Example_badugi() {
	for i, game := range []struct {
		seed    int64
		players int
	}{
		{119, 2},
		{321, 5},
		{408, 6},
		{455, 6},
		{1113, 6},
	} {
		// note: use a real random source
		rnd := rand.New(rand.NewSource(game.seed))
		pockets, _ := cardrank.Badugi.Deal(rnd, game.players)
		hands := cardrank.Badugi.RankHands(pockets, nil)
		fmt.Printf("------ Badugi %d ------\n", i+1)
		for j := 0; j < game.players; j++ {
			fmt.Printf("Player %d: %b %s %b %b\n", j+1, hands[j].Pocket, hands[j].Description(), hands[j].HiBest, hands[j].HiUnused)
		}
		h, pivot := cardrank.HiOrder(hands)
		if pivot == 1 {
			fmt.Printf("Result:   Player %d wins with %s %b\n", h[0]+1, hands[h[0]].Description(), hands[h[0]].HiBest)
		} else {
			var s, b []string
			for j := 0; j < pivot; j++ {
				s = append(s, strconv.Itoa(h[j]+1))
				b = append(b, fmt.Sprintf("%b", hands[h[j]].HiBest))
			}
			fmt.Printf("Result:   Players %s push with %s %s\n", strings.Join(s, ", "), hands[h[0]].Description(), strings.Join(b, ", "))
		}
	}
	// Output:
	// ------ Badugi 1 ------
	// Player 1: [K‚ô• J‚ô£ A‚ô• Q‚ô†] Queen, Jack, Ace-low [Q‚ô† J‚ô£ A‚ô•] [K‚ô•]
	// Player 2: [7‚ô£ 4‚ô£ 5‚ô† 2‚ô†] Four, Two-low [4‚ô£ 2‚ô†] [7‚ô£ 5‚ô†]
	// Result:   Player 1 wins with Queen, Jack, Ace-low [Q‚ô† J‚ô£ A‚ô•]
	// ------ Badugi 2 ------
	// Player 1: [3‚ô† 3‚ô¶ T‚ô† Q‚ô†] Ten, Three-low [T‚ô† 3‚ô¶] [Q‚ô† 3‚ô†]
	// Player 2: [6‚ô¶ Q‚ô£ 8‚ô• 6‚ô£] Queen, Eight, Six-low [Q‚ô£ 8‚ô• 6‚ô¶] [6‚ô£]
	// Player 3: [Q‚ô¶ K‚ô† 8‚ô£ A‚ô•] King, Queen, Eight, Ace-low [K‚ô† Q‚ô¶ 8‚ô£ A‚ô•] []
	// Player 4: [K‚ô¶ T‚ô¶ 8‚ô¶ 4‚ô•] Eight, Four-low [8‚ô¶ 4‚ô•] [K‚ô¶ T‚ô¶]
	// Player 5: [J‚ô¶ 2‚ô• Q‚ô• 6‚ô†] Jack, Six, Two-low [J‚ô¶ 6‚ô† 2‚ô•] [Q‚ô•]
	// Result:   Player 3 wins with King, Queen, Eight, Ace-low [K‚ô† Q‚ô¶ 8‚ô£ A‚ô•]
	// ------ Badugi 3 ------
	// Player 1: [K‚ô† Q‚ô† 4‚ô£ J‚ô¶] Queen, Jack, Four-low [Q‚ô† J‚ô¶ 4‚ô£] [K‚ô†]
	// Player 2: [J‚ô† 3‚ô£ 8‚ô• 2‚ô†] Eight, Three, Two-low [8‚ô• 3‚ô£ 2‚ô†] [J‚ô†]
	// Player 3: [3‚ô† T‚ô† 2‚ô£ Q‚ô¶] Queen, Three, Two-low [Q‚ô¶ 3‚ô† 2‚ô£] [T‚ô†]
	// Player 4: [5‚ô£ 5‚ô• T‚ô¶ 2‚ô¶] Five, Two-low [5‚ô• 2‚ô¶] [T‚ô¶ 5‚ô£]
	// Player 5: [7‚ô† 3‚ô• 6‚ô† A‚ô£] Six, Three, Ace-low [6‚ô† 3‚ô• A‚ô£] [7‚ô†]
	// Player 6: [4‚ô† 8‚ô¶ K‚ô¶ T‚ô£] Ten, Eight, Four-low [T‚ô£ 8‚ô¶ 4‚ô†] [K‚ô¶]
	// Result:   Player 5 wins with Six, Three, Ace-low [6‚ô† 3‚ô• A‚ô£]
	// ------ Badugi 4 ------
	// Player 1: [6‚ô† K‚ô• A‚ô£ 8‚ô£] King, Six, Ace-low [K‚ô• 6‚ô† A‚ô£] [8‚ô£]
	// Player 2: [Q‚ô• 4‚ô• J‚ô£ 5‚ô•] Jack, Four-low [J‚ô£ 4‚ô•] [Q‚ô• 5‚ô•]
	// Player 3: [2‚ô£ 6‚ô• 5‚ô£ Q‚ô†] Queen, Six, Two-low [Q‚ô† 6‚ô• 2‚ô£] [5‚ô£]
	// Player 4: [9‚ô† J‚ô• K‚ô† J‚ô†] Jack, Nine-low [J‚ô• 9‚ô†] [K‚ô† J‚ô†]
	// Player 5: [3‚ô¶ 4‚ô¶ K‚ô£ 8‚ô¶] King, Three-low [K‚ô£ 3‚ô¶] [8‚ô¶ 4‚ô¶]
	// Player 6: [T‚ô£ Q‚ô¶ A‚ô† 7‚ô•] Queen, Ten, Seven, Ace-low [Q‚ô¶ T‚ô£ 7‚ô• A‚ô†] []
	// Result:   Player 6 wins with Queen, Ten, Seven, Ace-low [Q‚ô¶ T‚ô£ 7‚ô• A‚ô†]
	// ------ Badugi 5 ------
	// Player 1: [3‚ô¶ 4‚ô¶ 5‚ô¶ J‚ô£] Jack, Three-low [J‚ô£ 3‚ô¶] [5‚ô¶ 4‚ô¶]
	// Player 2: [T‚ô• J‚ô† K‚ô† 2‚ô£] Jack, Ten, Two-low [J‚ô† T‚ô• 2‚ô£] [K‚ô†]
	// Player 3: [A‚ô£ 9‚ô† T‚ô† 3‚ô†] Three, Ace-low [3‚ô† A‚ô£] [T‚ô† 9‚ô†]
	// Player 4: [7‚ô¶ 3‚ô£ 8‚ô† 7‚ô£] Eight, Seven, Three-low [8‚ô† 7‚ô¶ 3‚ô£] [7‚ô£]
	// Player 5: [5‚ô£ Q‚ô† J‚ô• 2‚ô†] Jack, Five, Two-low [J‚ô• 5‚ô£ 2‚ô†] [Q‚ô†]
	// Player 6: [6‚ô† 7‚ô† 7‚ô• 2‚ô•] Six, Two-low [6‚ô† 2‚ô•] [7‚ô† 7‚ô•]
	// Result:   Player 4 wins with Eight, Seven, Three-low [8‚ô† 7‚ô¶ 3‚ô£]
}
